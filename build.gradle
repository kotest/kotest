buildscript {
    ext.kotlin_version = '1.1.51'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


plugins {
    id 'net.researchgate.release' version '2.6.0'
}

release {
    failOnPublishNeeded = false
}

group = "io.kotlintest"

apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: "jacoco"

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenCentral()
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

build {
    afterReleaseBuild.dependsOn uploadArchives
}

dependencies {
    compile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'org.mockito:mockito-core:2.7.11'
    compile 'org.reflections:reflections:0.9.11'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19'
    compileOnly 'org.slf4j:slf4j-api:1.7.25'
    testCompile 'org.slf4j:slf4j-api:1.7.25'
    testCompile 'ch.qos.logback:logback-classic:1.+'

}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'KotlinTest'
                packaging 'jar'
                description 'Kotlin Test Framework'
                url 'http://www.github.com/kotlintest/kotlintest'

                scm {
                    connection 'scm:git:http://www.github.com/kotlintest/kotlintest/'
                    developerConnection 'scm:git:http://github.com/sksamuel/'
                    url 'http://www.github.com/kotlintest/kotlintest/'
                }

                licenses {
                    license {
                        name 'The MIT License'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id 'sksamuel'
                        name 'Stephen Samuel'
                        email 'sam@sksamuel.com'
                    }
                }
            }
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}
kotlin {
    experimental {
        coroutines "enable"
    }
}