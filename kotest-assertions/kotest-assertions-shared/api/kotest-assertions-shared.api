public final class io/kotest/assertions/Actual {
	public fun <init> (Lio/kotest/assertions/print/Printed;)V
	public final fun component1 ()Lio/kotest/assertions/print/Printed;
	public final fun copy (Lio/kotest/assertions/print/Printed;)Lio/kotest/assertions/Actual;
	public static synthetic fun copy$default (Lio/kotest/assertions/Actual;Lio/kotest/assertions/print/Printed;ILjava/lang/Object;)Lio/kotest/assertions/Actual;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Lio/kotest/assertions/print/Printed;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/kotest/assertions/AssertSoftlyKt {
	public static final fun assertSoftly (Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class io/kotest/assertions/AssertionErrorBuilder {
	public static final field Companion Lio/kotest/assertions/AssertionErrorBuilder$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;Lio/kotest/assertions/Expected;Lio/kotest/assertions/Actual;)V
	public final fun build ()Ljava/lang/AssertionError;
	public final fun copy (Ljava/lang/String;Ljava/lang/Throwable;Lio/kotest/assertions/Expected;Lio/kotest/assertions/Actual;)Lio/kotest/assertions/AssertionErrorBuilder;
	public static synthetic fun copy$default (Lio/kotest/assertions/AssertionErrorBuilder;Ljava/lang/String;Ljava/lang/Throwable;Lio/kotest/assertions/Expected;Lio/kotest/assertions/Actual;ILjava/lang/Object;)Lio/kotest/assertions/AssertionErrorBuilder;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun withCause (Ljava/lang/Throwable;)Lio/kotest/assertions/AssertionErrorBuilder;
	public final fun withMessage (Ljava/lang/String;)Lio/kotest/assertions/AssertionErrorBuilder;
	public final fun withValues (Lio/kotest/assertions/Expected;Lio/kotest/assertions/Actual;)Lio/kotest/assertions/AssertionErrorBuilder;
}

public final class io/kotest/assertions/AssertionErrorBuilder$Companion {
	public final fun create ()Lio/kotest/assertions/AssertionErrorBuilder;
	public final fun fail (Ljava/lang/String;)Ljava/lang/Void;
	public final fun failSoftly (Ljava/lang/String;)V
}

public final class io/kotest/assertions/AssertionErrorBuilder_jvmKt {
	public static final fun createAssertionError (Ljava/lang/String;Ljava/lang/Throwable;Lio/kotest/assertions/Expected;Lio/kotest/assertions/Actual;)Ljava/lang/AssertionError;
	public static final fun intellijFormattedComparison (Lio/kotest/assertions/Expected;Lio/kotest/assertions/Actual;)Ljava/lang/String;
}

public final class io/kotest/assertions/CollectorKt {
	public static final fun collectOrThrow (Lio/kotest/matchers/ErrorCollector;Ljava/lang/Throwable;)V
	public static final fun collectOrThrow (Lio/kotest/matchers/ErrorCollector;Ljava/util/Collection;)V
	public static final fun pushErrorAndMaybeThrow (Lio/kotest/matchers/ErrorCollector;Ljava/lang/Throwable;)V
	public static final fun pushErrors (Lio/kotest/matchers/ErrorCollector;Ljava/util/Collection;)V
	public static final fun throwCollectedErrors (Lio/kotest/matchers/ErrorCollector;)V
}

public final class io/kotest/assertions/Collector_jvmKt {
	public static final fun collectErrors (Lio/kotest/matchers/ErrorCollector;)Ljava/lang/AssertionError;
}

public final class io/kotest/assertions/Expected {
	public fun <init> (Lio/kotest/assertions/print/Printed;)V
	public final fun component1 ()Lio/kotest/assertions/print/Printed;
	public final fun copy (Lio/kotest/assertions/print/Printed;)Lio/kotest/assertions/Expected;
	public static synthetic fun copy$default (Lio/kotest/assertions/Expected;Lio/kotest/assertions/print/Printed;ILjava/lang/Object;)Lio/kotest/assertions/Expected;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Lio/kotest/assertions/print/Printed;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/kotest/assertions/KotestAssertionFailedError : java/lang/AssertionError {
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Throwable;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;)Lio/kotest/assertions/KotestAssertionFailedError;
	public static synthetic fun copy$default (Lio/kotest/assertions/KotestAssertionFailedError;Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/kotest/assertions/KotestAssertionFailedError;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActual ()Ljava/lang/String;
	public fun getCause ()Ljava/lang/Throwable;
	public final fun getExpected ()Ljava/lang/String;
	public fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/kotest/assertions/MultiAssertionError : java/lang/AssertionError {
	public fun <init> (Ljava/util/List;Ljava/lang/String;)V
	public final fun getErrors ()Ljava/util/List;
}

public final class io/kotest/assertions/MultiAssertionErrorBuilder {
	public static final field Companion Lio/kotest/assertions/MultiAssertionErrorBuilder$Companion;
	public fun <init> (Ljava/util/List;)V
	public final fun build ()Lio/kotest/assertions/MultiAssertionError;
}

public final class io/kotest/assertions/MultiAssertionErrorBuilder$Companion {
	public final fun create (Ljava/util/List;)Lio/kotest/assertions/MultiAssertionErrorBuilder;
}

public final class io/kotest/assertions/print/Printed {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Lkotlin/reflect/KClass;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lkotlin/reflect/KClass;
	public final fun copy (Ljava/lang/String;Lkotlin/reflect/KClass;)Lio/kotest/assertions/print/Printed;
	public static synthetic fun copy$default (Lio/kotest/assertions/print/Printed;Ljava/lang/String;Lkotlin/reflect/KClass;ILjava/lang/Object;)Lio/kotest/assertions/print/Printed;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getType ()Lkotlin/reflect/KClass;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/kotest/matchers/AssertionCounter {
	public abstract fun get ()I
	public fun getAndReset ()I
	public abstract fun inc ()V
	public fun inc (I)V
	public abstract fun reset ()V
}

public final class io/kotest/matchers/AssertionCounter$DefaultImpls {
	public static fun getAndReset (Lio/kotest/matchers/AssertionCounter;)I
	public static fun inc (Lio/kotest/matchers/AssertionCounter;I)V
}

public final class io/kotest/matchers/AssertionCounter_jvmKt {
	public static final fun getAssertionCounter ()Lio/kotest/matchers/AssertionCounter;
	public static final fun getAssertionCounterContextElement ()Lkotlin/coroutines/CoroutineContext$Element;
}

public class io/kotest/matchers/BasicErrorCollector : io/kotest/matchers/ErrorCollector {
	public fun <init> ()V
	public fun clear ()V
	public fun clueContext ()Ljava/util/List;
	public fun errors ()Ljava/util/List;
	protected final fun getClues ()Ljava/util/List;
	public fun getCollectionMode ()Lio/kotest/matchers/ErrorCollectionMode;
	public fun getDepth ()I
	protected final fun getFailures ()Ljava/util/List;
	protected final fun getMode ()Lio/kotest/matchers/ErrorCollectionMode;
	public fun getSubject ()Lio/kotest/assertions/print/Printed;
	public fun popClue ()V
	public fun pushClue (Lkotlin/jvm/functions/Function0;)V
	public fun pushError (Ljava/lang/Throwable;)V
	public fun setCollectionMode (Lio/kotest/matchers/ErrorCollectionMode;)V
	public fun setDepth (I)V
	protected final fun setMode (Lio/kotest/matchers/ErrorCollectionMode;)V
	public fun setSubject (Lio/kotest/assertions/print/Printed;)V
}

public abstract interface class io/kotest/matchers/ComparableMatcherResult : io/kotest/matchers/MatcherResult {
	public static final field Companion Lio/kotest/matchers/ComparableMatcherResult$Companion;
	public abstract fun actual ()Ljava/lang/String;
	public abstract fun expected ()Ljava/lang/String;
}

public final class io/kotest/matchers/ComparableMatcherResult$Companion {
	public final fun invoke (ZLkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Ljava/lang/String;Ljava/lang/String;)Lio/kotest/matchers/ComparableMatcherResult;
}

public final class io/kotest/matchers/ComparisonMatcherResult : io/kotest/matchers/MatcherResult {
	public fun <init> (ZLio/kotest/assertions/print/Printed;Lio/kotest/assertions/print/Printed;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)V
	public final fun component1 ()Z
	public final fun component2 ()Lio/kotest/assertions/print/Printed;
	public final fun component3 ()Lio/kotest/assertions/print/Printed;
	public final fun component4 ()Lkotlin/jvm/functions/Function0;
	public final fun component5 ()Lkotlin/jvm/functions/Function0;
	public final fun copy (ZLio/kotest/assertions/print/Printed;Lio/kotest/assertions/print/Printed;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)Lio/kotest/matchers/ComparisonMatcherResult;
	public static synthetic fun copy$default (Lio/kotest/matchers/ComparisonMatcherResult;ZLio/kotest/assertions/print/Printed;Lio/kotest/assertions/print/Printed;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lio/kotest/matchers/ComparisonMatcherResult;
	public fun equals (Ljava/lang/Object;)Z
	public fun failureMessage ()Ljava/lang/String;
	public final fun getActual ()Lio/kotest/assertions/print/Printed;
	public final fun getExpected ()Lio/kotest/assertions/print/Printed;
	public final fun getFailureMessageFn ()Lkotlin/jvm/functions/Function0;
	public final fun getNegatedFailureMessageFn ()Lkotlin/jvm/functions/Function0;
	public final fun getPassed ()Z
	public fun hashCode ()I
	public fun negatedFailureMessage ()Ljava/lang/String;
	public fun passed ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/kotest/matchers/EqualityMatcherResult : io/kotest/matchers/MatcherResult {
	public static final field Companion Lio/kotest/matchers/EqualityMatcherResult$Companion;
	public abstract fun actual ()Ljava/lang/Object;
	public abstract fun expected ()Ljava/lang/Object;
}

public final class io/kotest/matchers/EqualityMatcherResult$Companion {
	public final fun invoke (ZLjava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)Lio/kotest/matchers/EqualityMatcherResult;
}

public final class io/kotest/matchers/ErrorCollectionMode : java/lang/Enum {
	public static final field Hard Lio/kotest/matchers/ErrorCollectionMode;
	public static final field Soft Lio/kotest/matchers/ErrorCollectionMode;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/kotest/matchers/ErrorCollectionMode;
	public static fun values ()[Lio/kotest/matchers/ErrorCollectionMode;
}

public abstract interface class io/kotest/matchers/ErrorCollector {
	public abstract fun clear ()V
	public abstract fun clueContext ()Ljava/util/List;
	public abstract fun errors ()Ljava/util/List;
	public abstract fun getCollectionMode ()Lio/kotest/matchers/ErrorCollectionMode;
	public abstract fun getDepth ()I
	public abstract fun getSubject ()Lio/kotest/assertions/print/Printed;
	public abstract fun popClue ()V
	public abstract fun pushClue (Lkotlin/jvm/functions/Function0;)V
	public abstract fun pushError (Ljava/lang/Throwable;)V
	public abstract fun setCollectionMode (Lio/kotest/matchers/ErrorCollectionMode;)V
	public abstract fun setDepth (I)V
	public abstract fun setSubject (Lio/kotest/assertions/print/Printed;)V
}

public final class io/kotest/matchers/ErrorCollectorKt {
	public static final fun clueContextAsString ()Ljava/lang/String;
}

public abstract interface class io/kotest/matchers/Matcher {
	public static final field Companion Lio/kotest/matchers/Matcher$Companion;
	public fun contramap (Lkotlin/jvm/functions/Function1;)Lio/kotest/matchers/Matcher;
	public fun invert ()Lio/kotest/matchers/Matcher;
	public fun invertIf (Z)Lio/kotest/matchers/Matcher;
	public abstract fun test (Ljava/lang/Object;)Lio/kotest/matchers/MatcherResult;
}

public final class io/kotest/matchers/Matcher$Companion {
	public final fun failure (Ljava/lang/String;)Lio/kotest/matchers/Matcher;
	public final fun invoke (Lkotlin/jvm/functions/Function1;)Lio/kotest/matchers/Matcher;
}

public final class io/kotest/matchers/Matcher$DefaultImpls {
	public static fun contramap (Lio/kotest/matchers/Matcher;Lkotlin/jvm/functions/Function1;)Lio/kotest/matchers/Matcher;
	public static fun invert (Lio/kotest/matchers/Matcher;)Lio/kotest/matchers/Matcher;
	public static fun invertIf (Lio/kotest/matchers/Matcher;Z)Lio/kotest/matchers/Matcher;
}

public final class io/kotest/matchers/MatcherKt {
	public static final fun and (Lio/kotest/matchers/Matcher;Lio/kotest/matchers/Matcher;)Lio/kotest/matchers/Matcher;
	public static final fun or (Lio/kotest/matchers/Matcher;Lio/kotest/matchers/Matcher;)Lio/kotest/matchers/Matcher;
}

public abstract interface class io/kotest/matchers/MatcherResult {
	public static final field Companion Lio/kotest/matchers/MatcherResult$Companion;
	public abstract fun failureMessage ()Ljava/lang/String;
	public abstract fun negatedFailureMessage ()Ljava/lang/String;
	public abstract fun passed ()Z
}

public final class io/kotest/matchers/MatcherResult$Companion {
	public final fun invoke (ZLkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)Lio/kotest/matchers/MatcherResult;
}

public final class io/kotest/matchers/jvmerrorcollector {
	public static final fun getErrorCollector ()Lio/kotest/matchers/ErrorCollector;
	public static final fun getErrorCollectorContextElement ()Lkotlin/coroutines/CoroutineContext$Element;
}

