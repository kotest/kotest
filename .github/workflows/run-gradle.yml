name: Gradle Task
run-name: "Gradle Task ${{ inputs.task }}, ${{ inputs.runs-on }}, ${{ inputs.ref }}"

on:
   workflow_call:
      inputs:
         runs-on:
            description: "The platform to run tests on"
            required: true
            type: string
         ref:
            description: "The git branch, tag or SHA to checkout"
            required: false
            type: string
         task:
            description: "The Gradle task to run"
            required: true
            type: string

permissions:
   contents: read

jobs:
   run-tests:
      runs-on: ${{ inputs.runs-on }}
      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v4
            with:
               ref: ${{ github.event.inputs.ref }}

         -  name: Validate Gradle Wrapper
            uses: gradle/actions/wrapper-validation@v3

         -  name: Setup JDK
            uses: actions/setup-java@v4
            with:
               distribution: "temurin"
               java-version: "17"

         -  uses: gradle/actions/setup-gradle@v3

         -  name: Run tests
            run: ./gradlew ${{ inputs.task }} --scan
            shell: bash

         - name: Upload build reports
           if: failure()
           uses: actions/upload-artifact@v4
           with:
              name: build-reports-${{ runner.os }}-${{ github.action }}-${{ github.run_id }}
              path: |
                 **/build/reports/
                 **/*.hprof
                 **/*.log
              if-no-files-found: ignore

env:
   RELEASE_VERSION: ${{ github.event.inputs.version }}
   OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
   OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
   ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
   ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
   GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx12g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
