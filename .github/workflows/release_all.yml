name: release_all

on:
   workflow_dispatch:
      inputs:
         version:
            description: "The release version"
            required: true
         branch:
            description: "The branch to release from"
            required: true
            default: 'master'
env:
   RELEASE_VERSION: ${{ github.event.inputs.version }}
   OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
   OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
   ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
   ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
   GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=false -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxMetaspaceSize=756m -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"

permissions:
   contents: read

jobs:
   publish_base:
      runs-on: ubuntu-latest
      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0
               ref: ${{ github.event.inputs.branch }}

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               distribution: 'zulu'
               java-version: '8'

         -  uses: gradle/gradle-build-action@v2

         -  name: publish multiplatform release
            run: ./gradlew publishKotlinMultiplatformPublicationToDeployRepository

         -  name: publish jvm release
            run: ./gradlew publishJvmPublicationToDeployRepository

         -  name: publish js release
            run: ./gradlew publishJsPublicationToDeployRepository

         -  name: publish bom release
            run: ./gradlew publishKotestBomPublicationToDeployRepository

   publish_linux:
      runs-on: ubuntu-latest
      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0
               ref: ${{ github.event.inputs.branch }}

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               distribution: 'adopt'
               java-version: '8'

         -  uses: gradle/gradle-build-action@v2

         -  name: publish linux x64 release
            run: ./gradlew publishLinuxX64PublicationToDeployRepository

   publish_mac:
      runs-on: macos-11
      strategy:
         max-parallel: 6
         matrix:
            target:
               - publishMacosX64PublicationToDeployRepository
               - publishMacosArm64PublicationToDeployRepository
               - publishIosX64PublicationToDeployRepository
               - publishIosSimulatorArm64PublicationToDeployRepository
               - publishIosArm64PublicationToDeployRepository
               - publishIosArm32PublicationToDeployRepository
               - publishTvosX64PublicationToDeployRepository
               - publishTvosArm64PublicationToDeployRepository
               - publishWatchosArm32PublicationToDeployRepository
               - publishWatchosArm64PublicationToDeployRepository
               - publishWatchosX86PublicationToDeployRepository
               - publishWatchosX64PublicationToDeployRepository
               - publishWatchosSimulatorArm64PublicationToDeployRepository
               - publishTvosSimulatorArm64PublicationToDeployRepository
      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0
               ref: ${{ github.event.inputs.branch }}

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               distribution: 'adopt'
               java-version: '8'

         -  uses: gradle/gradle-build-action@v2

         -  name: publish
            run: ./gradlew ${{ matrix.target }}

   publish_windows:
      runs-on: windows-latest
      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0
               ref: ${{ github.event.inputs.branch }}

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               distribution: 'adopt'
               java-version: '8'

         -  uses: gradle/gradle-build-action@v2

         -  name: publish mingwX64 release
            run: ./gradlew publishMingwX64PublicationToDeployRepository

   release-gradle-plugin:
      runs-on: ubuntu-latest
      if: github.repository == 'kotest/kotest'

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               distribution: 'adopt'
               java-version: '8'

         -  uses: gradle/gradle-build-action@v2

         -  name: deploy to gradle
            run: ./gradlew :kotest-framework:kotest-framework-multiplatform-plugin-gradle:publishPlugins -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}
