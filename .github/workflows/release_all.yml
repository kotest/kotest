name: release_all

on:
   workflow_dispatch:
      inputs:
         version:
            description: "The release version"
            required: true
         branch:
            description: "The branch to release from"
            required: true
            default: 'master'
env:
   RELEASE_VERSION: ${{ github.event.inputs.version }}
   OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
   OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
   ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
   ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
   GRADLE_OPTS: -Dorg.gradle.configureondemand=false -Dorg.gradle.parallel=false -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"

permissions:
  contents: read

jobs:
   publish_base:
      runs-on: ubuntu-latest
      if: github.repository == 'kotest/kotest'

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0
               ref: ${{ github.event.inputs.branch }}

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               distribution: 'temurin'
               java-version: '8'

         -  uses: gradle/gradle-build-action@v2

         -  name: publish multiplatform release
            run: ./gradlew publishKotlinMultiplatformPublicationToDeployRepository

         -  name: publish jvm release
            run: ./gradlew publishJvmPublicationToDeployRepository

         -  name: publish js release
            run: ./gradlew publishJsPublicationToDeployRepository

         -  name: publish bom release
            run: ./gradlew publishKotestBomPublicationToDeployRepository

   publish_linux:
      runs-on: ubuntu-latest
      if: github.repository == 'kotest/kotest'

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0
               ref: ${{ github.event.inputs.branch }}

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               distribution: 'temurin'
               java-version: '8'

         -  uses: gradle/gradle-build-action@v2

         -  name: publish linux x64 release
            run: ./gradlew publishLinuxX64PublicationToDeployRepository

   publish_macos:
      runs-on: macos-11
      if: github.repository == 'kotest/kotest'

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0
               ref: ${{ github.event.inputs.branch }}

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               java-version: '8'
               distribution: 'temurin'

         -  uses: gradle/gradle-build-action@v2

         -  name: publish macosx64 release
            run: ./gradlew publishMacosX64PublicationToDeployRepository

         -  name: publish macosArm64 release
            run: ./gradlew publishMacosArm64PublicationToDeployRepository

   publish_watchos:
      runs-on: macos-11
      if: github.repository == 'kotest/kotest'

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0
               ref: ${{ github.event.inputs.branch }}

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               java-version: '8'
               distribution: 'temurin'

         -  uses: gradle/gradle-build-action@v2

         -  name: publish watchosX64 release
            run: ./gradlew publishWatchosX64PublicationToDeployRepository

         -  name: publish watchosX86 release
            run: ./gradlew publishWatchosX86PublicationToDeployRepository

         -  name: publish watchosArm32 release
            run: ./gradlew publishWatchosArm32PublicationToDeployRepository

         -  name: publish watchosArm64 release
            run: ./gradlew publishWatchosArm64PublicationToDeployRepository

         -  name: publish watchosSimulatorArm64 release
            run: ./gradlew publishWatchosSimulatorArm64PublicationToDeployRepository

   publish_ios:
      runs-on: macos-11
      if: github.repository == 'kotest/kotest'

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0
               ref: ${{ github.event.inputs.branch }}

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               java-version: '8'
               distribution: 'temurin'

         -  uses: gradle/gradle-build-action@v2

         -  name: publish iosX64 release
            run: ./gradlew publishIosX64PublicationToDeployRepository

         -  name: publish iosArm64 release
            run: ./gradlew publishIosArm64PublicationToDeployRepository

         -  name: publish iosArm32 release
            run: ./gradlew publishIosArm32PublicationToDeployRepository

         -  name: publish iosSimulatorArm64 release
            run: ./gradlew publishIosSimulatorArm64PublicationToDeployRepository

   publish_tvos:
      runs-on: macos-11
      if: github.repository == 'kotest/kotest'

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0
               ref: ${{ github.event.inputs.branch }}

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               java-version: '8'
               distribution: 'temurin'

         -  uses: gradle/gradle-build-action@v2

         -  name: publish tvosX64 release
            run: ./gradlew publishTvosX64PublicationToDeployRepository

         -  name: publish tvosArm64 release
            run: ./gradlew publishTvosArm64PublicationToDeployRepository

         -  name: publish tvosSimulatorArm64 release
            run: ./gradlew publishTvosSimulatorArm64PublicationToDeployRepository

   publish_windows:
      runs-on: windows-latest
      if: github.repository == 'kotest/kotest'

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0
               ref: ${{ github.event.inputs.branch }}

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               java-version: '8'
               distribution: 'temurin'

         -  uses: gradle/gradle-build-action@v2

         -  name: publish mingwX64 release
            run: ./gradlew publishMingwX64PublicationToDeployRepository
