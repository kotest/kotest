plugins {
    id 'java'
    id 'org.jetbrains.kotlin.multiplatform'
    id 'java-library'
}

repositories {
    mavenCentral()
}

kotlin {

    jvm()

    sourceSets {

        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                api kotlin("reflect")
                api project(":kotest-core")
                api project(":kotest-extensions")
                api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
                api "io.github.classgraph:classgraph:$classgraphVersion"
                api 'org.slf4j:slf4j-api:1.7.25'

                api "io.arrow-kt:arrow-core:$arrow_version"
            }
        }

        jvmTest {
            dependencies {
                implementation project(':kotest-runner:kotest-runner-junit5')
            }
        }
    }
}

compileKotlinJvm {
    kotlinOptions {
        freeCompilerArgs += '-Xuse-experimental=kotlin.Experimental'
    }
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

apply from: '../../publish.gradle'

test {
    useJUnitPlatform()

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    testLogging {
        events "FAILED", "SKIPPED", "STANDARD_OUT", "STANDARD_ERROR"
        exceptionFormat = 'full'
    }
}


