public final class io/kotest/framework/concurrency/ContinuallyBuilder {
	public fun <init> ()V
	public fun <init> (Lio/kotest/framework/concurrency/ContinuallyConfig;)V
	public final fun getDuration ()J
	public final fun getInitialDelay ()J
	public final fun getInterval ()Lio/kotest/framework/concurrency/Interval;
	public final fun getListener ()Lkotlin/jvm/functions/Function1;
	public final fun setDuration (J)V
	public final fun setInitialDelay (J)V
	public final fun setInterval (Lio/kotest/framework/concurrency/Interval;)V
	public final fun setListener (Lkotlin/jvm/functions/Function1;)V
	public final fun toConfig ()Lio/kotest/framework/concurrency/ContinuallyConfig;
}

public final class io/kotest/framework/concurrency/ContinuallyConfig {
	public fun <init> ()V
	public fun <init> (JLio/kotest/framework/concurrency/Interval;JLkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (JLio/kotest/framework/concurrency/Interval;JLkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()J
	public final fun component2 ()Lio/kotest/framework/concurrency/Interval;
	public final fun component3 ()J
	public final fun component4 ()Lkotlin/jvm/functions/Function1;
	public final fun copy (JLio/kotest/framework/concurrency/Interval;JLkotlin/jvm/functions/Function1;)Lio/kotest/framework/concurrency/ContinuallyConfig;
	public static synthetic fun copy$default (Lio/kotest/framework/concurrency/ContinuallyConfig;JLio/kotest/framework/concurrency/Interval;JLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/kotest/framework/concurrency/ContinuallyConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDuration ()J
	public final fun getInitialDelay ()J
	public final fun getInterval ()Lio/kotest/framework/concurrency/Interval;
	public final fun getListener ()Lkotlin/jvm/functions/Function1;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/kotest/framework/concurrency/ContinuallyKt {
	public static final fun continually (JLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun continually (Lio/kotest/framework/concurrency/ContinuallyConfig;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun continually (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun continually-KLykuaI (JLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/kotest/framework/concurrency/ContinuallyState {
	public fun <init> (Ljava/lang/Object;JJI)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()J
	public final fun component3 ()J
	public final fun component4 ()I
	public final fun copy (Ljava/lang/Object;JJI)Lio/kotest/framework/concurrency/ContinuallyState;
	public static synthetic fun copy$default (Lio/kotest/framework/concurrency/ContinuallyState;Ljava/lang/Object;JJIILjava/lang/Object;)Lio/kotest/framework/concurrency/ContinuallyState;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEnd ()J
	public final fun getResult ()Ljava/lang/Object;
	public final fun getStart ()J
	public final fun getTimes ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/kotest/framework/concurrency/EventuallyBuilder {
	public fun <init> ()V
	public final fun build ()Lio/kotest/framework/concurrency/EventuallyConfig;
	public final fun getDuration ()J
	public final fun getInitialDelay ()J
	public final fun getInterval ()Lio/kotest/framework/concurrency/Interval;
	public final fun getListener ()Lkotlin/jvm/functions/Function1;
	public final fun getPredicate ()Lkotlin/jvm/functions/Function1;
	public final fun getRetries ()I
	public final fun getShortCircuit ()Lkotlin/jvm/functions/Function1;
	public final fun getSuppressExceptionIf ()Lkotlin/jvm/functions/Function1;
	public final fun getSuppressExceptions ()Ljava/util/Set;
	public final fun setDuration (J)V
	public final fun setInitialDelay (J)V
	public final fun setInterval (Lio/kotest/framework/concurrency/Interval;)V
	public final fun setListener (Lkotlin/jvm/functions/Function1;)V
	public final fun setPredicate (Lkotlin/jvm/functions/Function1;)V
	public final fun setRetries (I)V
	public final fun setShortCircuit (Lkotlin/jvm/functions/Function1;)V
	public final fun setSuppressExceptionIf (Lkotlin/jvm/functions/Function1;)V
	public final fun setSuppressExceptions (Ljava/util/Set;)V
}

public final class io/kotest/framework/concurrency/EventuallyConfig {
	public fun <init> ()V
	public fun <init> (JLio/kotest/framework/concurrency/Interval;JILjava/util/Set;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (JLio/kotest/framework/concurrency/Interval;JILjava/util/Set;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()J
	public final fun component2 ()Lio/kotest/framework/concurrency/Interval;
	public final fun component3 ()J
	public final fun component4 ()I
	public final fun component5 ()Ljava/util/Set;
	public final fun component6 ()Lkotlin/jvm/functions/Function1;
	public final fun component7 ()Lkotlin/jvm/functions/Function1;
	public final fun component8 ()Lkotlin/jvm/functions/Function1;
	public final fun component9 ()Lkotlin/jvm/functions/Function1;
	public final fun copy (JLio/kotest/framework/concurrency/Interval;JILjava/util/Set;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lio/kotest/framework/concurrency/EventuallyConfig;
	public static synthetic fun copy$default (Lio/kotest/framework/concurrency/EventuallyConfig;JLio/kotest/framework/concurrency/Interval;JILjava/util/Set;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/kotest/framework/concurrency/EventuallyConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDuration ()J
	public final fun getInitialDelay ()J
	public final fun getInterval ()Lio/kotest/framework/concurrency/Interval;
	public final fun getListener ()Lkotlin/jvm/functions/Function1;
	public final fun getPredicate ()Lkotlin/jvm/functions/Function1;
	public final fun getRetries ()I
	public final fun getShortCircuit ()Lkotlin/jvm/functions/Function1;
	public final fun getSuppressExceptionIf ()Lkotlin/jvm/functions/Function1;
	public final fun getSuppressExceptions ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/kotest/framework/concurrency/EventuallyKt {
	public static final fun eventually (JLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun eventually (Lio/kotest/framework/concurrency/EventuallyConfig;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun eventually (Lio/kotest/framework/concurrency/EventuallyConfig;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun eventually (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun eventually-KLykuaI (JLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun invoke (Lio/kotest/framework/concurrency/EventuallyConfig;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun until (JLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun until (Lio/kotest/framework/concurrency/EventuallyConfig;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun until (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun until-KLykuaI (JLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/kotest/framework/concurrency/EventuallyShortCircuitException : java/lang/Throwable {
	public fun <init> (Ljava/lang/String;)V
	public fun getMessage ()Ljava/lang/String;
}

public final class io/kotest/framework/concurrency/EventuallyState {
	public fun <init> (Ljava/lang/Object;JJILjava/lang/Throwable;Ljava/lang/Throwable;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()J
	public final fun component3 ()J
	public final fun component4 ()I
	public final fun component5 ()Ljava/lang/Throwable;
	public final fun component6 ()Ljava/lang/Throwable;
	public final fun copy (Ljava/lang/Object;JJILjava/lang/Throwable;Ljava/lang/Throwable;)Lio/kotest/framework/concurrency/EventuallyState;
	public static synthetic fun copy$default (Lio/kotest/framework/concurrency/EventuallyState;Ljava/lang/Object;JJILjava/lang/Throwable;Ljava/lang/Throwable;ILjava/lang/Object;)Lio/kotest/framework/concurrency/EventuallyState;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEnd ()J
	public final fun getFirstError ()Ljava/lang/Throwable;
	public final fun getResult ()Ljava/lang/Object;
	public final fun getStart ()J
	public final fun getThisError ()Ljava/lang/Throwable;
	public final fun getTimes ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/kotest/framework/concurrency/ExponentialInterval : io/kotest/framework/concurrency/Interval {
	public static final field Companion Lio/kotest/framework/concurrency/ExponentialInterval$Companion;
	public static final field defaultFactor D
	public static final field defaultMax J
	public fun <init> (JDLjava/lang/Long;)V
	public fun next (I)J
	public fun toString ()Ljava/lang/String;
}

public final class io/kotest/framework/concurrency/ExponentialInterval$Companion {
}

public final class io/kotest/framework/concurrency/FibonacciInterval : io/kotest/framework/concurrency/Interval {
	public static final field Companion Lio/kotest/framework/concurrency/FibonacciInterval$Companion;
	public static final field defaultMax J
	public fun <init> (JILjava/lang/Long;)V
	public fun next (I)J
	public fun toString ()Ljava/lang/String;
}

public final class io/kotest/framework/concurrency/FibonacciInterval$Companion {
}

public final class io/kotest/framework/concurrency/FixedInterval : io/kotest/framework/concurrency/Interval {
	public fun <init> (J)V
	public fun next (I)J
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/kotest/framework/concurrency/Interval {
	public abstract fun next (I)J
}

public final class io/kotest/framework/concurrency/IntervalKt {
	public static final fun exponential (JDLjava/lang/Long;)Lio/kotest/framework/concurrency/ExponentialInterval;
	public static synthetic fun exponential$default (JDLjava/lang/Long;ILjava/lang/Object;)Lio/kotest/framework/concurrency/ExponentialInterval;
	public static final fun exponential-4_FzEXg (JDLkotlin/time/Duration;)Lio/kotest/framework/concurrency/ExponentialInterval;
	public static synthetic fun exponential-4_FzEXg$default (JDLkotlin/time/Duration;ILjava/lang/Object;)Lio/kotest/framework/concurrency/ExponentialInterval;
	public static final fun fibonacci (I)I
	public static final fun fibonacci (JLjava/lang/Long;)Lio/kotest/framework/concurrency/FibonacciInterval;
	public static synthetic fun fibonacci$default (JLjava/lang/Long;ILjava/lang/Object;)Lio/kotest/framework/concurrency/FibonacciInterval;
	public static final fun fibonacci-JKoRlfk (JLkotlin/time/Duration;)Lio/kotest/framework/concurrency/FibonacciInterval;
	public static synthetic fun fibonacci-JKoRlfk$default (JLkotlin/time/Duration;ILjava/lang/Object;)Lio/kotest/framework/concurrency/FibonacciInterval;
	public static final fun fixed (J)Lio/kotest/framework/concurrency/FixedInterval;
	public static final fun fixed-LRDsOJo (J)Lio/kotest/framework/concurrency/FixedInterval;
}

