[versions]
blockhound = "1.0.10.RELEASE"
commons-lang3 = "3.13.0"
gradle-test-logger-plugin = "3.2.0"
java-diff-utils = "4.12"
jdom2 = "2.0.6.1"
json-path = "2.9.0"
junit4 = "4.13.2"
junit-platform = "1.8.2"
junit-jupiter = "5.8.2"
kaml = "0.66.0"
kotlin = "2.1.0"
kotlinx-coroutines = "1.10.0"
kotlinx-serialization = "1.6.3"
ktor = "2.3.13"
mockk = "1.13.14"
mordant = "1.2.1"
opentest4j = "1.3.0"
plugin-publish = "1.3.1"
rgxgen = "1.4"
shadowjar = "8.1.1"
devPublishPlugin = "0.4.2"
spring-boot = "2.7.18"
spring = "5.3.39"
byte-buddy = "1.15.11"
allure = "2.24.0"
koin = "3.5.6"
mockserver = "5.15.0"
fuel = "2.3.1"
konform = "0.10.0"
arrow = "2.0.1"

### Java compilation ###
# Kotest's minimum supported Java version.
jvmMinTarget = "8"
# Kotest's maximum supported Java version. (Must be >= jvmMinTarget.)
jvmMaxTarget = "21"
# JDK used to compile Kotest. (Must be >= jvmMaxTarget.)
jvmCompiler = "21"
# JDK used to run Gradle Daemon. (Should be the same as jvmCompiler, but could be higher or lower.)
gradleDaemonJvm = "21"

[libraries]
apache-commons-lang = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
blockhound = { module = "io.projectreactor.tools:blockhound", version.ref = "blockhound" }
diffutils = { module = "io.github.java-diff-utils:java-diff-utils", version.ref = "java-diff-utils" }
jayway-json-path = { module = "com.jayway.jsonpath:json-path", version.ref = "json-path" }
jdom2 = { module = "org.jdom:jdom2", version.ref = "jdom2" }
junit4 = { module = "junit:junit", version.ref = "junit4" }
kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mordant = { module = "com.github.ajalt:mordant", version.ref = "mordant" }
opentest4j = { module = "org.opentest4j:opentest4j", version.ref = "opentest4j" }
rgxgen = { module = "com.github.curious-odd-man:rgxgen", version.ref = "rgxgen" }

arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-optics = { module = "io.arrow-kt:arrow-optics", version.ref = "arrow" }
arrow-functions = { module = "io.arrow-kt:arrow-functions", version.ref = "arrow" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

junit-platform-testkit = { module = "org.junit.platform:junit-platform-testkit", version.ref = "junit-platform" }
junit-platform-engine = { module = "org.junit.platform:junit-platform-engine", version.ref = "junit-platform" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junit-platform" }
junit-platform-api = { module = "org.junit.platform:junit-platform-suite-api", version.ref = "junit-platform" }

junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }

fuel = { module = "com.github.kittinunf.fuel:fuel", version.ref = "fuel" }

mockserver-client-java = { module = "org.mock-server:mockserver-client-java", version.ref = "mockserver" }
mockserver-netty = { module = "org.mock-server:mockserver-netty", version.ref = "mockserver" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-debug = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-debug", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }

kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

konform = { module = "io.konform:konform", version.ref = "konform" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-apache = { module = "io.ktor:ktor-client-apache", version.ref = "ktor" }

kotlin-compile-testing = { module = "dev.zacsweers.kctfork:core", version = "0.7.0" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-testHost = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }

kotlin-compiler = { module = "org.jetbrains.kotlin:kotlin-compiler", version.ref = "kotlin" }
kotlin-compiler-embeddable = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "kotlin" }

kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.6.1" }

spring-context = { group = "org.springframework", name = "spring-context", version.ref = "spring" }
spring-test = { group = "org.springframework", name = "spring-test", version.ref = "spring" }
spring-boot-test = { group = "org.springframework.boot", name = "spring-boot-starter-test", version.ref = "spring-boot" }
byte-buddy = { group = "net.bytebuddy", name = "byte-buddy", version.ref = "byte-buddy" }

allure-commons = { module = "io.qameta.allure:allure-java-commons", version.ref = "allure" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version = "2.15.2" }

# Gradle plugins
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
testlogger-gradle-plugin = { module = "com.adarshr:gradle-test-logger-plugin", version.ref = "gradle-test-logger-plugin" }
devPublish-plugin = { module = "dev.adamko.gradle:dev-publish-plugin", version.ref = "devPublishPlugin" }

[bundles]
junit-jupiter = ["junit-jupiter-api", "junit-jupiter-engine"]

[plugins]
gradle-plugin-publish = { id = "com.gradle.plugin-publish", version.ref = "plugin-publish" }
shadowjar = { id = "com.github.johnrengelman.shadow", version.ref = "shadowjar" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinBinaryCompatibilityValidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version = "0.14.0" }
allure = { id = "io.qameta.allure", version = "2.12.0" }
