"use strict";(self.webpackChunkkotestdocs=self.webpackChunkkotestdocs||[]).push([[34153],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(r),m=a,f=d["".concat(i,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},85162:(e,t,r)=>{r.d(t,{Z:()=>l});var n=r(67294),a=r(86010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:r,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:r},t)}},74866:(e,t,r)=>{r.d(t,{Z:()=>T});var n=r(87462),a=r(67294),o=r(86010),l=r(76775),s=r(91980),i=r(67392),u=r(50012);function c(e){return function(e){var t;return(null==(t=a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:a}}=e;return{value:t,label:r,attributes:n,default:a}}))}function p(e){const{values:t,children:r}=e;return(0,a.useMemo)((()=>{const e=t??c(r);return function(e){const t=(0,i.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function d(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:r}=e;const n=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,s._X)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function f(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,o=p(e),[l,s]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[i,c]=m({queryString:r,groupId:n}),[f,k]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,u.Nk)(r);return[n,(0,a.useCallback)((e=>{r&&o.set(e)}),[r,o])]}({groupId:n}),h=(()=>{const e=i??f;return d({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{h&&s(h)}),[h]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),k(e)}),[c,k,o]),tabValues:o}}var k=r(12466),h=r(72389);const v="tabList__CuJ",y="tabItem_LNqP";function b(e){let{className:t,block:r,selectedValue:l,selectValue:s,tabValues:i}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,k.o5)(),p=e=>{const t=e.currentTarget,r=u.indexOf(t),n=i[r].value;n!==l&&(c(t),s(n))},d=e=>{var t;let r=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;r=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;r=u[t]??u[u.length-1];break}}null==(t=r)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},t)},i.map((e=>{let{value:t,label:r,attributes:s}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:p},s,{className:(0,o.Z)("tabs__item",y,null==s?void 0:s.className,{"tabs__item--active":l===t})}),r??t)})))}function g(e){let{lazy:t,children:r,selectedValue:n}=e;const o=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function w(e){const t=f(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",v)},a.createElement(b,(0,n.Z)({},e,t)),a.createElement(g,(0,n.Z)({},e,t)))}function T(e){const t=(0,h.Z)();return a.createElement(w,(0,n.Z)({key:String(t)},e))}},22181:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var n=r(87462),a=(r(67294),r(3905)),o=r(74866),l=r(85162);const s={id:"quickstart",title:"Quick Start",sidebar_label:"Quick Start"},i=void 0,u={unversionedId:"quickstart",id:"version-6.0/quickstart",title:"Quick Start",description:"Kotest is a flexible and comprehensive testing project for Kotlin with multiplatform support.",source:"@site/versioned_docs/version-6.0/quick_start.mdx",sourceDirName:".",slug:"/quickstart",permalink:"/docs/quickstart",draft:!1,editUrl:"https://github.com/kotest/kotest/blob/master/documentation/versioned_docs/version-6.0/quick_start.mdx",tags:[],version:"6.0",frontMatter:{id:"quickstart",title:"Quick Start",sidebar_label:"Quick Start"},sidebar:"docs",next:{title:"Release 6.0",permalink:"/docs/release6"}},c={},p=[{value:"Test Framework",id:"test-framework",level:2},{value:"Assertions Library",id:"assertions-library",level:2},{value:"Property Testing",id:"property-testing",level:2},{value:"Snapshots",id:"snapshots",level:2}],d={toc:p};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Kotest is a flexible and comprehensive testing project for Kotlin with multiplatform support.")),(0,a.kt)("p",null,"For latest updates see ",(0,a.kt)("a",{parentName:"p",href:"/docs/changelog.html"},"Changelog"),"."),(0,a.kt)("p",null,"Kotest is divided into several, stand alone, subprojects, each of which can be used independently:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/framework/framework.html"},"Test framework")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/assertions/assertions.html"},"Assertions library")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/proptest/property-based-testing.html"},"Property testing"))),(0,a.kt)("p",null,"You can decide to go ",(0,a.kt)("em",{parentName:"p"},"all in")," on Kotest, and use all three together, or you can choose to one or more modules in conjunction with other projects.\nFor example, you could use the assertions library with JUnit, or you could use the test framework with another assertions library like assertj."),(0,a.kt)("p",null,"This page gives setup instructions for various combinations of projects and targets."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Kotest is a ",(0,a.kt)("a",{parentName:"p",href:"https://kotlinlang.org/docs/reference/multiplatform.html"},"multiplatform project"),".\nIf you are unfamiliar with this, then Kotlin compiles to different targets - JVM, JS, Native, iOS and so on. If you are doing server side or android development then you want the modules that end with JVM, such as ",(0,a.kt)("inlineCode",{parentName:"p"},"kotest-property-jvm"),".")),(0,a.kt)("h2",{id:"test-framework"},"Test Framework"),(0,a.kt)("p",null,"The Kotest test framework is supported on JVM, Android, Javascript and Native. To setup kotest as your testing framework, follow detailed instructions in the ",(0,a.kt)("a",{parentName:"p",href:"/docs/framework/project-setup.html"},"framework documentation")," page."),(0,a.kt)("h2",{id:"assertions-library"},"Assertions Library"),(0,a.kt)("p",null,"The core assertions library framework is supported on all targets. Submodules are supported on the platforms that applicable.\nFor example, the JDBC matchers only work for JVM since JDBC is a Java library."),(0,a.kt)(o.Z,{defaultValue:"JVM/Gradle",values:[{label:"JVM/Gradle",value:"JVM/Gradle"},{label:"JVM/Maven",value:"JVM/Maven"},{label:"Multiplatform",value:"Multiplatform"}],mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"JVM/Gradle",mdxType:"TabItem"},(0,a.kt)("p",null,"Add the following dependency to your build:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},"testImplementation 'io.kotest:kotest-assertions-core:$version'\n"))),(0,a.kt)(l.Z,{value:"JVM/Maven",mdxType:"TabItem"},(0,a.kt)("p",null,"Add the following dependency to your build."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n   <groupId>io.kotest</groupId>\n   <artifactId>kotest-assertions-core-jvm</artifactId>\n   <version>{version}</version>\n   <scope>test</scope>\n</dependency>\n"))),(0,a.kt)(l.Z,{value:"Multiplatform",mdxType:"TabItem"},(0,a.kt)("p",null,"Add the following dependency to your commonTest dependencies block:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},"implementation 'io.kotest:kotest-assertions-core:$version'\n")),(0,a.kt)("p",null,"Alternatively, add the dependency to a specific target. For example, we could add to the Javascript target only."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'kotlin {\n   targets {\n      js {\n         browser()\n         nodejs()\n      }\n   }\n   sourceSets {\n      val jsTest by getting {\n         dependencies {\n            implementation("io.kotest:kotest-assertions-core:$version")\n         }\n      }\n   }\n}\n')))),(0,a.kt)("p",null,"View the ",(0,a.kt)("a",{parentName:"p",href:"/docs/assertions/assertions.html"},"assertions documentation")," for more information."),(0,a.kt)("h2",{id:"property-testing"},"Property Testing"),(0,a.kt)("p",null,"The property test framework is supported on all targets."),(0,a.kt)(o.Z,{defaultValue:"JVM/Gradle",values:[{label:"JVM/Gradle",value:"JVM/Gradle"},{label:"JVM/Maven",value:"JVM/Maven"},{label:"Multiplatform",value:"Multiplatform"}],mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"JVM/Gradle",mdxType:"TabItem"},(0,a.kt)("p",null,"Add the following dependency to your build:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},"testImplementation 'io.kotest:kotest-property:$version'\n"))),(0,a.kt)(l.Z,{value:"JVM/Maven",mdxType:"TabItem"},(0,a.kt)("p",null,"Add the following dependency to your build."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n   <groupId>io.kotest</groupId>\n   <artifactId>kotest-property-jvm</artifactId>\n   <version>${version}</version>\n   <scope>test</scope>\n</dependency>\n"))),(0,a.kt)(l.Z,{value:"Multiplatform",mdxType:"TabItem"},(0,a.kt)("p",null,"Add the following dependency to your commonTest dependencies block:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},"implementation 'io.kotest:kotest-property:$version'\n")),(0,a.kt)("p",null,"Alternatively, add the dependency to a specific target. For example, we could add to the Javascript target only."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'kotlin {\n   targets {\n      js {\n         browser()\n         nodejs()\n      }\n   }\n   sourceSets {\n      val jsTest by getting {\n         dependencies {\n            implementation("io.kotest:kotest-property:$version")\n         }\n      }\n   }\n}\n')))),(0,a.kt)("p",null,"View the ",(0,a.kt)("a",{parentName:"p",href:"/docs/proptest/property-based-testing.html"},"property testing documentation")," for more information."),(0,a.kt)("h2",{id:"snapshots"},"Snapshots"),(0,a.kt)("p",null,"Snapshot are automatically published on each commit to master.\nIf you want to test the latest snapshot build, setup the same way described above, change the version to the current snapshot version and add the following repository to your ",(0,a.kt)("inlineCode",{parentName:"p"},"repositories")," block:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"https://s01.oss.sonatype.org/content/repositories/snapshots\n")))}m.isMDXComponent=!0}}]);