"use strict";(self.webpackChunkkotestdocs=self.webpackChunkkotestdocs||[]).push([[26366],{18729:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"5.2.x","label":"5.2.x","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-5.2.x","isLast":false,"docsSidebars":{"docs":[{"type":"link","label":"Quick Start","href":"/docs/5.2.x/quickstart","docId":"quickstart"},{"type":"link","label":"Changelog","href":"/docs/5.2.x/changelog.html","docId":"changelog"},{"type":"link","label":"Blogs and Articles","href":"/docs/5.2.x/blogs","docId":"blogs"}],"proptest":[{"type":"link","label":"Introduction","href":"/docs/5.2.x/proptest/property-based-testing.html","docId":"proptest/index"},{"type":"link","label":"Test Functions","href":"/docs/5.2.x/proptest/property-test-functions.html","docId":"proptest/testfunctions"},{"type":"link","label":"Generators","href":"/docs/5.2.x/proptest/property-test-generators.html","docId":"proptest/gens"},{"type":"link","label":"Generators List","href":"/docs/5.2.x/proptest/property-test-generators-list.html","docId":"proptest/genslist"},{"type":"link","label":"Generator Operations","href":"/docs/5.2.x/proptest/generator-operations.html","docId":"proptest/genops"},{"type":"link","label":"Configuration","href":"/docs/5.2.x/proptest/property-test-config.html","docId":"proptest/proptestconfig"},{"type":"link","label":"Custom Generators","href":"/docs/5.2.x/proptest/custom-generators.html","docId":"proptest/customgens"},{"type":"link","label":"Shrinking","href":"/docs/5.2.x/proptest/property-test-shrinking.html","docId":"proptest/shrinking"},{"type":"link","label":"Global Configuration","href":"/docs/5.2.x/proptest/property-test-global-config.html","docId":"proptest/globalconfig"},{"type":"link","label":"Arrow Generators","href":"/docs/5.2.x/proptest/property-test-generators-arrow.html","docId":"proptest/arrow"},{"type":"link","label":"Kotlinx DateTime","href":"/docs/5.2.x/proptest/kotlinx-datetime-gens.html","docId":"proptest/date_gens"},{"type":"link","label":"Extra Arbs","href":"/docs/5.2.x/proptest/property-test-extra-arbs.html","docId":"proptest/extra_arbs"}],"intellij":[{"type":"link","label":"Introduction","href":"/docs/5.2.x/intellij/intellij-plugin.html","docId":"intellij/index"},{"type":"link","label":"Test Explorer","href":"/docs/5.2.x/intellij/intellij-test-explorer.html","docId":"intellij/test_explorer"},{"type":"link","label":"Properties","href":"/docs/5.2.x/intellij/intellij-properties.html","docId":"intellij/props"}],"extensions":[{"type":"link","label":"Introduction","href":"/docs/5.2.x/extensions/extensions.html","docId":"extensions/index"},{"type":"link","label":"Spring","href":"/docs/5.2.x/extensions/spring.html","docId":"extensions/spring"},{"type":"link","label":"Ktor","href":"/docs/5.2.x/extensions/ktor.html","docId":"extensions/ktor"},{"type":"link","label":"System Extensions","href":"/docs/5.2.x/extensions/system_extensions.html","docId":"extensions/system_extensions"},{"type":"link","label":"Testcontainers","href":"/docs/5.2.x/extensions/test_containers.html","docId":"extensions/test_containers"},{"type":"link","label":"Kafka","href":"/docs/5.2.x/extensions/embedded-kafka.html","docId":"extensions/kafka"},{"type":"link","label":"MockServer","href":"/docs/5.2.x/extensions/mockserver.html","docId":"extensions/mockserver"},{"type":"link","label":"JUnit XML","href":"/docs/5.2.x/extensions/junit_xml.html","docId":"extensions/junit_xml"},{"type":"link","label":"HTML Reporter","href":"/docs/5.2.x/extensions/html_reporter.html","docId":"extensions/html_reporter"},{"type":"link","label":"Allure","href":"/docs/5.2.x/extensions/allure.html","docId":"extensions/allure"},{"type":"link","label":"Current Instant Listeners","href":"/docs/5.2.x/extensions/instant.html","docId":"extensions/instant"},{"type":"link","label":"Koin","href":"/docs/5.2.x/extensions/koin.html","docId":"extensions/koin"},{"type":"link","label":"WireMock","href":"/docs/5.2.x/extensions/wiremock.html","docId":"extensions/wiremock"},{"type":"link","label":"Robolectric","href":"/docs/5.2.x/extensions/robolectric.html","docId":"extensions/robolectric"},{"type":"link","label":"Pitest","href":"/docs/5.2.x/extensions/pitest.html","docId":"extensions/pitest"}],"assertions":[{"type":"link","label":"Assertions","href":"/docs/5.2.x/assertions/assertions.html","docId":"assertions/index"},{"type":"link","label":"Matchers","href":"/docs/5.2.x/assertions/matchers.html","docId":"assertions/matchers"},{"type":"link","label":"Custom Matchers","href":"/docs/5.2.x/assertions/custom-matchers.html","docId":"assertions/custom_matchers"},{"type":"link","label":"Composed Matchers","href":"/docs/5.2.x/assertions/composed-matchers.html","docId":"assertions/composed_matchers"},{"type":"link","label":"Exceptions","href":"/docs/5.2.x/assertions/exceptions.html","docId":"assertions/exceptions"},{"type":"link","label":"Clues","href":"/docs/5.2.x/assertions/clues.html","docId":"assertions/clues"},{"type":"link","label":"Soft Assertions","href":"/docs/5.2.x/assertions/soft-assertions.html","docId":"assertions/soft_assertions"},{"type":"category","label":"Non-deterministic Testing","collapsed":false,"items":[{"type":"link","label":"Eventually","href":"/docs/5.2.x/assertions/eventually.html","docId":"assertions/eventually"},{"type":"link","label":"Continually","href":"/docs/5.2.x/assertions/continually.html","docId":"assertions/continually"},{"type":"link","label":"Until","href":"/docs/5.2.x/assertions/until.html","docId":"assertions/until"},{"type":"link","label":"Retry","href":"/docs/5.2.x/assertions/retry.html","docId":"assertions/retry"}],"collapsible":true},{"type":"link","label":"Inspectors","href":"/docs/5.2.x/assertions/inspectors.html","docId":"assertions/inspectors"},{"type":"link","label":"Assertion Mode","href":"/docs/5.2.x/assertions/assertion-mode.html","docId":"assertions/assertion_mode"},{"type":"category","label":"Matcher Modules","collapsed":false,"items":[{"type":"link","label":"Core","href":"/docs/5.2.x/assertions/core-matchers.html","docId":"assertions/core"},{"type":"link","label":"Json","href":"/docs/5.2.x/assertions/json-matchers.html","docId":"assertions/json"},{"type":"link","label":"Ktor","href":"/docs/5.2.x/assertions/ktor-matchers.html","docId":"assertions/ktor"},{"type":"link","label":"Android","href":"/docs/5.2.x/assertions/android-matchers.html","docId":"assertions/android_matchers"},{"type":"link","label":"Kotlinx Datetime","href":"/docs/5.2.x/assertions/kotlinx-datetime-matchers.html","docId":"assertions/kotlinx_datetime"},{"type":"link","label":"Arrow","href":"/docs/5.2.x/assertions/arrow.html","docId":"assertions/arrow"},{"type":"link","label":"SQL","href":"/docs/5.2.x/assertions/sql-matchers.html","docId":"assertions/sql-matchers"},{"type":"link","label":"Konform","href":"/docs/5.2.x/assertions/konform-matchers.html","docId":"assertions/konform"},{"type":"link","label":"Klock","href":"/docs/5.2.x/assertions/klock-matchers.html","docId":"assertions/klock"},{"type":"link","label":"Compiler","href":"/docs/5.2.x/assertions/compiler-matchers.html","docId":"assertions/compiler"},{"type":"link","label":"Jsoup","href":"/docs/5.2.x/assertions/jsoup-matchers.html","docId":"assertions/jsoup"}],"collapsible":true}],"framework":[{"type":"link","label":"Introduction","href":"/docs/5.2.x/framework/framework.html","docId":"framework/index"},{"type":"link","label":"Writing Tests","href":"/docs/5.2.x/framework/writing-tests.html","docId":"framework/writing_tests"},{"type":"link","label":"Testing Styles","href":"/docs/5.2.x/framework/testing-styles.html","docId":"framework/styles"},{"type":"category","label":"Conditional Evaluation","collapsed":true,"items":[{"type":"link","label":"Enabled Flags","href":"/docs/5.2.x/framework/conditional/enabled-config-flag.html","docId":"framework/conditional/enabled_config_flags"},{"type":"link","label":"Focus and Bang","href":"/docs/5.2.x/framework/conditional/conditional-tests-with-focus-and-bang.html","docId":"framework/conditional/focus_and_bang"},{"type":"link","label":"X Methods","href":"/docs/5.2.x/framework/conditional/conditional-tests-with-x-methods.html","docId":"framework/conditional/xmethods"},{"type":"link","label":"Spec Annotations","href":"/docs/5.2.x/framework/conditional/spec-annotations-conditional-evaluation.html","docId":"framework/conditional/annotations"},{"type":"link","label":"Gradle","href":"/docs/5.2.x/framework/conditional/conditional-tests-with-gradle.html","docId":"framework/conditional/gradle"}],"collapsible":true},{"type":"link","label":"Isolation Modes","href":"/docs/5.2.x/framework/isolation-mode.html","docId":"framework/isolation_mode"},{"type":"link","label":"Lifecycle hooks","href":"/docs/5.2.x/framework/lifecycle-hooks.html","docId":"framework/lifecycle_hooks"},{"type":"category","label":"Extensions","collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/docs/5.2.x/framework/extensions/extensions-introduction.html","docId":"framework/extensions/extensions_introduction"},{"type":"link","label":"Simple Extensions","href":"/docs/5.2.x/framework/extensions/simple-extensions.html","docId":"framework/extensions/simple_extensions"},{"type":"link","label":"Advanced Extensions","href":"/docs/5.2.x/framework/extensions/advanced-extensions.html","docId":"framework/extensions/advanced_extensions"},{"type":"link","label":"Examples","href":"/docs/5.2.x/framework/extensions/extension-examples.html","docId":"framework/extensions/extension_examples"}],"collapsible":true},{"type":"category","label":"Coroutines","collapsed":true,"items":[{"type":"link","label":"Test Coroutine Dispatcher","href":"/docs/5.2.x/framework/coroutines/test-coroutine-dispatcher.html","docId":"framework/coroutines/test_coroutine_dispatcher"},{"type":"link","label":"Coroutine Debugging","href":"/docs/5.2.x/framework/coroutines/coroutine-debugging.html","docId":"framework/coroutines/coroutine_debugging"}],"collapsible":true},{"type":"link","label":"Exceptions","href":"/docs/5.2.x/framework/exceptions.html","docId":"framework/exceptions"},{"type":"category","label":"Data Driven Testing","collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/docs/5.2.x/framework/datatesting/data-driven-testing.html","docId":"framework/datatesting/introduction"},{"type":"link","label":"Data Test Names","href":"/docs/5.2.x/framework/datatesting/custom-test-names.html","docId":"framework/datatesting/test_names"},{"type":"link","label":"Nested Data Tests","href":"/docs/5.2.x/framework/datatesting/nested-tests.html","docId":"framework/datatesting/nested"}],"collapsible":true},{"type":"category","label":"Non-deterministic Testing","collapsed":true,"items":[{"type":"link","label":"Eventually","href":"/docs/5.2.x/framework/concurrency/eventually.html","docId":"framework/concurrency/eventually"},{"type":"link","label":"Continually","href":"/docs/5.2.x/assertions/continually.html","docId":"assertions/continually"},{"type":"link","label":"Until","href":"/docs/5.2.x/assertions/until.html","docId":"assertions/until"},{"type":"link","label":"Retry","href":"/docs/5.2.x/assertions/retry.html","docId":"assertions/retry"}],"collapsible":true},{"type":"category","label":"Integrations","collapsed":true,"items":[{"type":"link","label":"Mocking","href":"/docs/5.2.x/framework/integrations/mocking.html","docId":"framework/integrations/mocks"},{"type":"link","label":"Jacoco","href":"/docs/5.2.x/framework/integrations/jacoco.html","docId":"framework/integrations/jacoco"}],"collapsible":true},{"type":"category","label":"Ordering","collapsed":true,"items":[{"type":"link","label":"Spec Ordering","href":"/docs/5.2.x/framework/spec-ordering.html","docId":"framework/spec_ordering"},{"type":"link","label":"Test Ordering","href":"/docs/5.2.x/framework/test-ordering.html","docId":"framework/test_ordering"}],"collapsible":true},{"type":"link","label":"Grouping Tests","href":"/docs/5.2.x/framework/tags.html","docId":"framework/tags"},{"type":"category","label":"Resources","collapsed":true,"items":[{"type":"link","label":"Closing resources automatically","href":"/docs/5.2.x/framework/autoclose.html","docId":"framework/autoclose"},{"type":"link","label":"Temporary Files","href":"/docs/5.2.x/framework/temporary-files","docId":"framework/tempfile"}],"collapsible":true},{"type":"category","label":"Configuration","collapsed":true,"items":[{"type":"link","label":"Test Case Config","href":"/docs/5.2.x/framework/testcaseconfig.html","docId":"framework/test_case_config"},{"type":"link","label":"Project Level Config","href":"/docs/5.2.x/framework/project-config.html","docId":"framework/project_config"},{"type":"link","label":"System properties","href":"/docs/5.2.x/framework/framework-config-props.html","docId":"framework/framework_config_props"}],"collapsible":true},{"type":"link","label":"Test Factories","href":"/docs/5.2.x/framework/test-factories.html","docId":"framework/test_factories"},{"type":"link","label":"Test Output","href":"/docs/5.2.x/framework/test_output.html","docId":"framework/test_output"},{"type":"category","label":"Timeouts","collapsed":true,"items":[{"type":"link","label":"Test Timeouts","href":"/docs/5.2.x/framework/timeouts/test-timeouts.html","docId":"framework/timeouts/test_timeouts"},{"type":"link","label":"Project Timeout","href":"/docs/5.2.x/framework/timeouts/project-timeouts.html","docId":"framework/timeouts/project_timeout"},{"type":"link","label":"Blocking Tests","href":"/docs/5.2.x/framework/timeouts/blocking-tests.html","docId":"framework/timeouts/blocking_tests"}],"collapsible":true},{"type":"category","label":"Other settings","collapsed":true,"items":[{"type":"link","label":"Fail Fast","href":"/docs/5.2.x/framework/fail-fast.html","docId":"framework/fail_fast"},{"type":"link","label":"Fail On Empty Test Suite","href":"/docs/5.2.x/framework/fail-on-empty-test-suite.html","docId":"framework/fail_on_empty"},{"type":"link","label":"Config Dump","href":"/docs/5.2.x/framework/config-dump.html","docId":"framework/config_dump"}],"collapsible":true}]},"docs":{"assertions/android_matchers":{"id":"assertions/android_matchers","title":"Android Matchers","description":"This page lists all current Android matchers in Kotest. These are additional to the default matchers and are specific to Android.","sidebar":"assertions"},"assertions/arrow":{"id":"assertions/arrow","title":"Arrow","description":"This page lists all current matchers in the Kotest arrow matchers extension library.","sidebar":"assertions"},"assertions/assertion_mode":{"id":"assertions/assertion_mode","title":"Assertion Mode","description":"If you are using Kotest framework alongside Kotest assertions, you can ask Kotest to fail the build, or output a warning to stderr, if a test is executed that does not execute an assertion.","sidebar":"assertions"},"assertions/clues":{"id":"assertions/clues","title":"Clues","description":"Clues only work if you are using the Kotest assertions library or Kotest test framework","sidebar":"assertions"},"assertions/compiler":{"id":"assertions/compiler","title":"Compiler Matchers","description":"The `kotest-assertions-compiler` extension provides matchers to assert that given kotlin code snippet compiles or not.","sidebar":"assertions"},"assertions/composed_matchers":{"id":"assertions/composed_matchers","title":"Composed Matchers","description":"Composed matchers can be created for any class or interface by composing one or more other matchers along with the property to extract to","sidebar":"assertions"},"assertions/continually":{"id":"assertions/continually","title":"Continually","description":"As the dual of eventually, continually allows you to assert that a block of code succeeds, and continues to succeed, for a period of time.","sidebar":"framework"},"assertions/core":{"id":"assertions/core","title":"Core Matchers","description":"Matchers provided by the kotest-assertions-core module.","sidebar":"assertions"},"assertions/custom_matchers":{"id":"assertions/custom_matchers","title":"Custom Matchers","description":"It is easy to define your own matchers in Kotest.","sidebar":"assertions"},"assertions/eventually":{"id":"assertions/eventually","title":"Eventually","description":"When testing non-deterministic code, a common use case is \\"I expect this code to pass after a short period of time\\".","sidebar":"assertions"},"assertions/exceptions":{"id":"assertions/exceptions","title":"Exceptions","description":"To assert that a given block of code throws an exception, one can use the shouldThrow function. Eg,","sidebar":"assertions"},"assertions/index":{"id":"assertions/index","title":"Assertions","description":"Kotest is split into several subprojects which can be used independently. One of these subprojects is","sidebar":"assertions"},"assertions/inspectors":{"id":"assertions/inspectors","title":"Inspectors","description":"Inspectors allow us to test elements in a collection. They are extension functions for collections and arrays that test","sidebar":"assertions"},"assertions/json":{"id":"assertions/json","title":"Json Matchers","description":"Kotest provides powerful JSON assertions in the kotest-assertions-json module.","sidebar":"assertions"},"assertions/jsoup":{"id":"assertions/jsoup","title":"Jsoup Matchers","description":"This page lists all current matchers in the KotlinTest jsoup matchers extension library. To use this library","sidebar":"assertions"},"assertions/klock":{"id":"assertions/klock","title":"Klock Matchers","description":"Matchers for the Klock library, provided by the kotest-assertions-klock module.","sidebar":"assertions"},"assertions/konform":{"id":"assertions/konform","title":"Konform Matchers","description":"Kotest provides various matchers for use with Konform.","sidebar":"assertions"},"assertions/kotlinx_datetime":{"id":"assertions/kotlinx_datetime","title":"Kotlinx Datetime Matchers","description":"Matchers for the Kotlinx Datetime library are provided by the kotest-assertions-kotlinx-time module.","sidebar":"assertions"},"assertions/ktor":{"id":"assertions/ktor","title":"Ktor Matchers","description":"Code is kept on a separate repository and on a different group: io.kotest.extensions.","sidebar":"assertions"},"assertions/matchers":{"id":"assertions/matchers","title":"Matchers","description":"A Matcher is the Kotest term for an assertion that performs a specific test. For example, a matcher may test that a double is greater than zero.","sidebar":"assertions"},"assertions/nondeterministic":{"id":"assertions/nondeterministic","title":"Non-deterministic Testing","description":"Sometimes you have to work with code that is non-deterministic in nature. This is not the preferred scenario for writing"},"assertions/retry":{"id":"assertions/retry","title":"Retry","description":"Retry","sidebar":"framework"},"assertions/soft_assertions":{"id":"assertions/soft_assertions","title":"Soft Assertions","description":"Normally, assertions like shouldBe throw an exception when they fail.","sidebar":"assertions"},"assertions/sql-matchers":{"id":"assertions/sql-matchers","title":"SQL Matchers","description":"","sidebar":"assertions"},"assertions/until":{"id":"assertions/until","title":"Until","description":"When testing non-deterministic code, a common use case is \\"I expect this code to pass after a short period of time\\".","sidebar":"framework"},"blog/release_4.1":{"id":"blog/release_4.1","title":"Release 4.1","description":"The Kotest team is pleased to announce the release of Kotest 4.1.0."},"blog/release_4.2":{"id":"blog/release_4.2","title":"Release 4.2","description":"The Kotest team is pleased to announce the release of Kotest 4.2.0."},"blog/release_4.3":{"id":"blog/release_4.3","title":"Release 4.3.0","description":"The Kotest team is pleased to announce the release of Kotest 4.3.0."},"blog/release_5.0":{"id":"blog/release_5.0","title":"Release 5.0","description":"**This document is a work in progress and will be finalized within a few days of the 5.0 release.**"},"blogs":{"id":"blogs","title":"Blogs and Articles on Kotest","description":"These blogs and articles can be useful in addition to the official docs to show how people are using Kotest in the wild.","sidebar":"docs"},"changelog":{"id":"changelog","title":"Changelog","description":"5.2.3 April 2022","sidebar":"docs"},"extensions/allure":{"id":"extensions/allure","title":"Allure","description":"Allure is an open-source framework designed for detailed and interactive test reports.","sidebar":"extensions"},"extensions/html_reporter":{"id":"extensions/html_reporter","title":"HTML Reporter","description":"Latest Release","sidebar":"extensions"},"extensions/index":{"id":"extensions/index","title":"Extensions","description":"Kotest integrates with many other libraries and frameworks. Some are provided by the Kotest team, and others are","sidebar":"extensions"},"extensions/instant":{"id":"extensions/instant","title":"Current Instant Listeners","description":"Current instant listeners","sidebar":"extensions"},"extensions/junit_xml":{"id":"extensions/junit_xml","title":"JUnit XML Format Reporter","description":"Latest Release","sidebar":"extensions"},"extensions/kafka":{"id":"extensions/kafka","title":"Embedded Kafka Extension","description":"Kotest offers an extension that spins up an embedded Kafka instance. This can help in situations","sidebar":"extensions"},"extensions/koin":{"id":"extensions/koin","title":"Koin","description":"Koin","sidebar":"extensions"},"extensions/ktor":{"id":"extensions/ktor","title":"Ktor","description":"The `kotest-assertions-ktor` module provides response matchers for a Ktor application. There are matchers","sidebar":"extensions"},"extensions/mockserver":{"id":"extensions/mockserver","title":"MockServer","description":"Kotest provides an extension for integration with the MockServer library.","sidebar":"extensions"},"extensions/pitest":{"id":"extensions/pitest","title":"Pitest","description":"The Mutation Testing tool Pitest is integrated with Kotest via an extension module.","sidebar":"extensions"},"extensions/robolectric":{"id":"extensions/robolectric","title":"Robolectric","description":"Robolectric","sidebar":"extensions"},"extensions/spring":{"id":"extensions/spring","title":"Spring","description":"Kotest offers a Spring extension that allows you to test code that uses the Spring framework for dependency injection.","sidebar":"extensions"},"extensions/system_extensions":{"id":"extensions/system_extensions","title":"System Extensions","description":"System Extensions","sidebar":"extensions"},"extensions/test_containers":{"id":"extensions/test_containers","title":"Testcontainers","description":"Testcontainers","sidebar":"extensions"},"extensions/test_containers_46":{"id":"extensions/test_containers_46","title":"Testcontainers","description":"Testcontainers"},"extensions/wiremock":{"id":"extensions/wiremock","title":"WireMock","description":"WireMock","sidebar":"extensions"},"framework/autoclose":{"id":"framework/autoclose","title":"Closing resources automatically","description":"You can let Kotest close resources automatically after all tests have been run:","sidebar":"framework"},"framework/concurrency":{"id":"framework/concurrency","title":"Concurrency","description":"Concurrency is at the heart of Kotlin, with compiler support for continuations (suspend functions), enabling"},"framework/concurrency/eventually":{"id":"framework/concurrency/eventually","title":"Eventually","description":"Starting with Kotest 4.6, a new experimental module has been added which contains improved","sidebar":"framework"},"framework/conditional_evaluation":{"id":"framework/conditional_evaluation","title":"Conditional Evaluation","description":"There are several ways to disable tests. Some of these are hardcoded in your test, others are evaluated at runtime."},"framework/conditional/annotations":{"id":"framework/conditional/annotations","title":"Conditional tests with annotations","description":"If we wish to completely disable a Spec and all tests included in the spec, we can do this using annotations.","sidebar":"framework"},"framework/conditional/enabled_config_flags":{"id":"framework/conditional/enabled_config_flags","title":"Conditional tests with enabled flags","description":"Kotest supports disabling tests by setting a configuration flag on a test.","sidebar":"framework"},"framework/conditional/focus_and_bang":{"id":"framework/conditional/focus_and_bang","title":"Conditional tests with focus and bang","description":"Focus","sidebar":"framework"},"framework/conditional/gradle":{"id":"framework/conditional/gradle","title":"Conditional tests with Gradle","description":"Kotest supports two ways to filter tests from the command line using Gradle. The first is the standard --tests flag","sidebar":"framework"},"framework/conditional/xmethods":{"id":"framework/conditional/xmethods","title":"Conditional tests with X Methods","description":"An idea that is popular with Javascript testing frameworks is to allow the test keywords to be prefixed with \'x\' to disable the test, and any nested tests.","sidebar":"framework"},"framework/config_dump":{"id":"framework/config_dump","title":"Config Dump","description":"Kotest can optionally print the configuration that will be used for the test run when the test engine starts up.","sidebar":"framework"},"framework/coroutines/coroutine_debugging":{"id":"framework/coroutines/coroutine_debugging","title":"Coroutine Debugging","description":"kotlinx-coroutines-debug is a module that provides debugging capabilities for coroutines on the JVM. When enabled, a debug agent","sidebar":"framework"},"framework/coroutines/test_coroutine_dispatcher":{"id":"framework/coroutines/test_coroutine_dispatcher","title":"Test Coroutine Dispatcher","description":"A TestDispatcher is a special CoroutineDispatcher provided by","sidebar":"framework"},"framework/data_driven_testing":{"id":"framework/data_driven_testing","title":"Data Driven Testing","description":"Moved here"},"framework/datatesting/data_driven_testing_4.2.0":{"id":"framework/datatesting/data_driven_testing_4.2.0","title":"data_driven_testing_4.2.0","description":"To test your code with different parameter combinations, you can use a table of values as input for your test"},"framework/datatesting/introduction":{"id":"framework/datatesting/introduction","title":"Introduction","description":"Before data-driven-testing can be used, you need to add the module kotest-framework-datatest to your build.","sidebar":"framework"},"framework/datatesting/nested":{"id":"framework/datatesting/nested","title":"Nested Data Tests","description":"Kotest\'s data testing is extremely flexible and allows to unlimited nesting of data test constructs.","sidebar":"framework"},"framework/datatesting/test_names":{"id":"framework/datatesting/test_names","title":"Data Test Names","description":"By default, the name of each test is simply the toString() on the input row.","sidebar":"framework"},"framework/discovery_extension":{"id":"framework/discovery_extension","title":"Discovery Extensions","description":"Advanced Feature"},"framework/dsl":{"id":"framework/dsl","title":"Kotest DSL","description":"This page discusses in detail the Kotest DSL that is used to build tests. You do not need to read this page"},"framework/exceptions":{"id":"framework/exceptions","title":"Testing Exceptions","description":"Testing for exceptions is easy with Kotest:","sidebar":"framework"},"framework/extensions/advanced_extensions":{"id":"framework/extensions/advanced_extensions","title":"Advanced Extensions","description":"This table lists more advanced extensions that can be used to hook into the Engine itself to:","sidebar":"framework"},"framework/extensions/extension_examples":{"id":"framework/extensions/extension_examples","title":"Extension Examples","description":"System Out Listener","sidebar":"framework"},"framework/extensions/extensions_introduction":{"id":"framework/extensions/extensions_introduction","title":"Introduction to Extensions","description":"Extensions are reusable lifecycle hooks. In fact, lifecycle hooks are themselves represented internally as instances","sidebar":"framework"},"framework/extensions/simple_extensions":{"id":"framework/extensions/simple_extensions","title":"Simple Extensions","description":"This table lists the most basic extensions, that cover test and spec lifecycle events, and are mostly equivalent to lifecycle hooks. For more advanced extensions that can be used to modify the way the Engine runs, see advanced extensions.","sidebar":"framework"},"framework/fail_fast":{"id":"framework/fail_fast","title":"Fail Fast","description":"Kotest can eagerly fail a list of tests if one of those tests fails. This is called fail fast.","sidebar":"framework"},"framework/fail_on_empty":{"id":"framework/fail_on_empty","title":"Fail On Empty Test Suite","description":"To ensure that a project always executes at least one test,","sidebar":"framework"},"framework/framework_config_props":{"id":"framework/framework_config_props","title":"Framework configuration properties","description":"---","sidebar":"framework"},"framework/index":{"id":"framework/index","title":"Introduction","description":"introgif","sidebar":"framework"},"framework/integrations/jacoco":{"id":"framework/integrations/jacoco","title":"Jacoco","description":"Kotest integrates with Jacoco for code coverage in the standard gradle way.","sidebar":"framework"},"framework/integrations/mocks":{"id":"framework/integrations/mocks","title":"Mocking and Kotest","description":"Kotest itself has no mock features. However, you can plug-in your favourite mocking library with ease!","sidebar":"framework"},"framework/isolation_mode":{"id":"framework/isolation_mode","title":"Isolation Modes","description":"All specs allow you to control how the test engine creates instances of Specs for test cases. This behavior is called the isolation mode and is controlled","sidebar":"framework"},"framework/lifecycle_hooks":{"id":"framework/lifecycle_hooks","title":"Lifecycle hooks","description":"It is extremely common in tests to want to perform some action before and after a test, or before and after all tests in the same file.","sidebar":"framework"},"framework/listeners":{"id":"framework/listeners","title":"Listeners","description":"This page has moved to extensions"},"framework/logging":{"id":"framework/logging","title":"Logging while Testing","description":"Sometimes we need to write logging statements to give a little more context when things go wrong."},"framework/project_config":{"id":"framework/project_config","title":"Project Level Config","description":"Kotest is flexible and has many ways to configure tests, such as configuring the order of tests inside a spec, or how","sidebar":"framework"},"framework/spec_lifecycle":{"id":"framework/spec_lifecycle","title":"Spec Lifecycle and Extensions","description":"Kotest has an extensive selection of hooks through which you can integrate into the spec lifecycle."},"framework/spec_ordering":{"id":"framework/spec_ordering","title":"Spec Ordering","description":"By default, the ordering of Spec classes is not defined. This means they are essentially random, in whatever order the discovery mechanism finds them.","sidebar":"framework"},"framework/styles":{"id":"framework/styles","title":"Testing Styles","description":"Kotest offers 10 different styles of test layout. Some are inspired from other popular test frameworks to make you feel right at home.","sidebar":"framework"},"framework/tags":{"id":"framework/tags","title":"Grouping Tests with Tags","description":"Sometimes you don\'t want to run all tests and Kotest provides tags to be able to determine which","sidebar":"framework"},"framework/tempfile":{"id":"framework/tempfile","title":"Temporary Files","description":"Sometimes it is required for a test to create a file and delete it after test, deleting it manually may lead to flaky","sidebar":"framework"},"framework/test_case_config":{"id":"framework/test_case_config","title":"Test Case Config","description":"Each test can be configured with various parameters. After the test name, invoke the config function","sidebar":"framework"},"framework/test_factories":{"id":"framework/test_factories","title":"Test Factories","description":"Sometimes we may wish to write a set of generic tests and then reuse them for specific inputs. In Kotest we can do this via test factories which create tests that can be included into one or more specs.","sidebar":"framework"},"framework/test_ordering":{"id":"framework/test_ordering","title":"Test Ordering","description":"When running multiple tests from a Spec, there\'s a certain order on how to execute them.","sidebar":"framework"},"framework/test_output":{"id":"framework/test_output","title":"Test Output","description":"If you are running Kotest via Gradle\'s Junit Platform support, and if you are using a nested spec style, you","sidebar":"framework"},"framework/timeout":{"id":"framework/timeout","title":"Timeouts","description":"Kotest supports timeouts at several execution points."},"framework/timeouts/blocking_tests":{"id":"framework/timeouts/blocking_tests","title":"Blocking Tests","description":"When specifying timeouts in tests, Kotest uses the withTimeout coroutine functions that the Kotlin coroutine","sidebar":"framework"},"framework/timeouts/project_timeout":{"id":"framework/timeouts/project_timeout","title":"Project Timeout","description":"Kotest supports a project level timeout.","sidebar":"framework"},"framework/timeouts/test_timeouts":{"id":"framework/timeouts/test_timeouts","title":"Test Timeouts","description":"Kotest supports two types of test timeout. The first is the overall time for all invocations of a test. This is just called timeout.","sidebar":"framework"},"framework/writing_tests":{"id":"framework/writing_tests","title":"Writing Tests","description":"By using the language features available in Kotlin, Kotest is able to provide a more powerful and yet simple approach","sidebar":"framework"},"home":{"id":"home","title":"home","description":"Kotest is a flexible and comprehensive testing project for Kotlin with multiplatform support."},"intellij/index":{"id":"intellij/index","title":"IntelliJ Plugin","description":"Kotest offers an IntelliJ plugin available at the jetbrains plugin marketplace (search from within IntelliJ).","sidebar":"intellij"},"intellij/props":{"id":"intellij/props","title":"Properties","description":"When running tests via the intellij runner, properties set using gradle.properties or in a gradle build file won\'t be picked up of course.","sidebar":"intellij"},"intellij/test_explorer":{"id":"intellij/test_explorer","title":"Test Explorer","description":"The plugin provides a tool window view which displays the structure of your tests.","sidebar":"intellij"},"proptest/arrow":{"id":"proptest/arrow","title":"Arrow Generators","description":"Kotest provides an optional module that provides generators for Arrow.","sidebar":"proptest"},"proptest/customgens":{"id":"proptest/customgens","title":"Custom Generators","description":"To write your own generator for a type T, you just create an instance of Arb or Exhaustive.","sidebar":"proptest"},"proptest/date_gens":{"id":"proptest/date_gens","title":"Kotlinx DateTime Gens","description":"Kotest provides an optional module that provides generators for KotlinX DateTime.","sidebar":"proptest"},"proptest/extra_arbs":{"id":"proptest/extra_arbs","title":"Extra Arbs","description":"If you are looking for a collection of Arbs for general purpose data generation,","sidebar":"proptest"},"proptest/genops":{"id":"proptest/genops","title":"Generator Operations","description":"Next","sidebar":"proptest"},"proptest/gens":{"id":"proptest/gens","title":"Generators","description":"Generated values are provided by instances of the sealed class Gen. You can think of a Gen as kind of like an input","sidebar":"proptest"},"proptest/genslist":{"id":"proptest/genslist","title":"Generators List","description":"This page lists all current generators in Kotest. There are two types of generator: arbitrary","sidebar":"proptest"},"proptest/globalconfig":{"id":"proptest/globalconfig","title":"Global Configuration","description":"Some property test settings can be set globally for all property tests.","sidebar":"proptest"},"proptest/index":{"id":"proptest/index","title":"Property-based Testing","description":"Kotest is split into several subprojects which can be used independently. One of these subprojects is the property test framework.","sidebar":"proptest"},"proptest/proptestconfig":{"id":"proptest/proptestconfig","title":"Configuration","description":"Configuration","sidebar":"proptest"},"proptest/shrinking":{"id":"proptest/shrinking","title":"Shrinking","description":"In property-based testing, the initially found failing case may contain a lot of complexity that does actually cause the test to fail.","sidebar":"proptest"},"proptest/testfunctions":{"id":"proptest/testfunctions","title":"Property Test Functions","description":"There are two variants of functions that are used to execute a property test in Kotest: forAll and checkAll.","sidebar":"proptest"},"quickstart":{"id":"quickstart","title":"Quick Start","description":"Kotest is divided into several, stand alone, subprojects, each of which can be used independently:","sidebar":"docs"},"why":{"id":"why","title":"Why Kotest","description":"If you are moving from Java to Kotlin then this page outlines some of the advantages of using Kotest over the common Java test libraries."}}}')}}]);