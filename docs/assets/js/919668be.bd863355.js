"use strict";(self.webpackChunkkotestdocs=self.webpackChunkkotestdocs||[]).push([[28971],{3905:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>u});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var s=r.createContext({}),m=function(t){var e=r.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},c=function(t){var e=m(t.components);return r.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,s=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),d=m(a),u=n,f=d["".concat(s,".").concat(u)]||d[u]||p[u]||l;return a?r.createElement(f,i(i({ref:e},c),{},{components:a})):r.createElement(f,i({ref:e},c))}));function u(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:n,i[1]=o;for(var m=2;m<l;m++)i[m]=a[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},22689:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var r=a(87462),n=(a(67294),a(3905));const l={title:"YAML",slug:"yaml-matchers.html",sidebar_label:"YAML"},i=void 0,o={unversionedId:"assertions/yaml",id:"assertions/yaml",title:"YAML",description:'To use these matchers add testImplementation("io.kotest") to your build.',source:"@site/docs/assertions/yaml.md",sourceDirName:"assertions",slug:"/assertions/yaml-matchers.html",permalink:"/docs/next/assertions/yaml-matchers.html",draft:!1,editUrl:"https://github.com/kotest/kotest/blob/master/documentation/docs/assertions/yaml.md",tags:[],version:"current",frontMatter:{title:"YAML",slug:"yaml-matchers.html",sidebar_label:"YAML"},sidebar:"assertions",previous:{title:"Ranges",permalink:"/docs/next/assertions/range-matchers.html"}},s={},m=[{value:"Basic matchers",id:"basic-matchers",level:2},{value:"Content-based matching",id:"content-based-matching",level:2}],c={toc:m};function p(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"To use these matchers add ",(0,n.kt)("inlineCode",{parentName:"p"},'testImplementation("io.kotest:kotest-assertions-yaml:<version>")')," to your build."),(0,n.kt)("h2",{id:"basic-matchers"},"Basic matchers"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Matcher"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Targets"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"shouldBeValidYaml")),(0,n.kt)("td",{parentName:"tr",align:null},"verifies that a given string parses to valid YAML"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Multiplatform")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"shouldNotBeValidYaml")),(0,n.kt)("td",{parentName:"tr",align:null},"verifies that a given not string parses to valid YAML"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Multiplatform")))),(0,n.kt)("h2",{id:"content-based-matching"},"Content-based matching"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Matcher"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Targets"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"shouldEqualYaml")),(0,n.kt)("td",{parentName:"tr",align:null},"Verifies that a String matches a given YAML."),(0,n.kt)("td",{parentName:"tr",align:"left"},"Multiplatform")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"shouldNotEqualYaml")),(0,n.kt)("td",{parentName:"tr",align:null},"Verifies that a String not matches a given YAML."),(0,n.kt)("td",{parentName:"tr",align:"left"},"Multiplatform")))))}p.isMDXComponent=!0}}]);