"use strict";(self.webpackChunkkotestdocs=self.webpackChunkkotestdocs||[]).push([[13449],{3905:(t,e,r)=>{r.d(e,{Zo:()=>u,kt:()=>g});var n=r(67294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function a(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var s=n.createContext({}),p=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):a(a({},e),t)),r},u=function(t){var e=p(t.components);return n.createElement(s.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},f=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,i=t.originalType,s=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),f=p(r),g=o,d=f["".concat(s,".").concat(g)]||f[g]||c[g]||i;return r?n.createElement(d,a(a({ref:e},u),{},{components:r})):n.createElement(d,a({ref:e},u))}));function g(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=r.length,a=new Array(i);a[0]=f;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:o,a[1]=l;for(var p=2;p<i;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},13798:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const i={id:"globalconfig",title:"Global Configuration",slug:"property-test-global-config.html"},a=void 0,l={unversionedId:"proptest/globalconfig",id:"proptest/globalconfig",title:"Global Configuration",description:"Some property test settings can be set globally for all property tests.",source:"@site/docs/proptest/globalconfig.md",sourceDirName:"proptest",slug:"/proptest/property-test-global-config.html",permalink:"/docs/next/proptest/property-test-global-config.html",draft:!1,editUrl:"https://github.com/kotest/kotest/blob/master/documentation/docs/proptest/globalconfig.md",tags:[],version:"current",frontMatter:{id:"globalconfig",title:"Global Configuration",slug:"property-test-global-config.html"},sidebar:"proptest",previous:{title:"Statistics",permalink:"/docs/next/proptest/property-test-statistics.html"},next:{title:"Arrow Generators",permalink:"/docs/next/proptest/property-test-generators-arrow.html"}},s={},p=[{value:"Default Iterations",id:"default-iterations",level:3},{value:"Printing Shrink Steps",id:"printing-shrink-steps",level:3}],u={toc:p};function c(t){let{components:e,...r}=t;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Some property test settings can be set globally for all property tests."),(0,o.kt)("h3",{id:"default-iterations"},"Default Iterations"),(0,o.kt)("p",null,"The standard default iteration count is 1000. This means when you don't specify the iteration count in a property test,\nthe default will be 1000."),(0,o.kt)("p",null,"We can override this default either by assigning a value to ",(0,o.kt)("inlineCode",{parentName:"p"},"PropertyTesting.defaultIterationCount"),", or by using the system property ",(0,o.kt)("inlineCode",{parentName:"p"},"kotest.proptest.default.iteration.count"),"."),(0,o.kt)("p",null,"Any test which directly sets the iteration count will of course use that value."),(0,o.kt)("p",null,"For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'PropertyTesting.defaultIterationCount = 123\n\n// will use 555 iterations specified in the test\nforAll<String, String>(555) { a,b -> a + b == "$a$b" }\n\n// will use 123 iterations from the global default\nforAll<String, String> { a,b -> a + b == "$a$b" }\n')),(0,o.kt)("p",null,"If you are using Kotest framework, then you can perform this action before any tests by using project config. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"class KotestConfig : AbstractProjectConfig() {\n   override suspend fun beforeProject() {\n      PropertyTesting.defaultIterationCount = 123\n   }\n}\n")),(0,o.kt)("h3",{id:"printing-shrink-steps"},"Printing Shrink Steps"),(0,o.kt)("p",null,"By default, when using shrinking, each shrinking step will not be logged, but only the final shrunk value."),(0,o.kt)("p",null,"To enable logging of each intermediate value, assign true to ",(0,o.kt)("inlineCode",{parentName:"p"},"PropertyTesting.shouldPrintShrinkSteps"),"\nor use the system property ",(0,o.kt)("inlineCode",{parentName:"p"},"kotest.proptest.output.shrink-steps=true"),"."))}c.isMDXComponent=!0}}]);