"use strict";(self.webpackChunkkotestdocs=self.webpackChunkkotestdocs||[]).push([[37742],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>d});var o=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,o,a=function(t,e){if(null==t)return{};var n,o,a={},r=Object.keys(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=o.createContext({}),c=function(t){var e=o.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=c(t.components);return o.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(t,e){var n=t.components,a=t.mdxType,r=t.originalType,l=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),m=c(n),d=a,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||r;return n?o.createElement(f,i(i({ref:e},p),{},{components:n})):o.createElement(f,i({ref:e},p))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:a,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},28318:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=n(87462),a=(n(67294),n(3905));const r={id:"instant",title:"Current Instant Listeners",sidebar_label:"Current Instant Listeners",slug:"instant.html"},i=void 0,s={unversionedId:"extensions/instant",id:"extensions/instant",title:"Current Instant Listeners",description:"Since Kotest 5.6.0, Current instant listeners are located in the artifact io.kotest$.",source:"@site/docs/extensions/instant.md",sourceDirName:"extensions",slug:"/extensions/instant.html",permalink:"/docs/next/extensions/instant.html",draft:!1,editUrl:"https://github.com/kotest/kotest/blob/master/documentation/docs/extensions/instant.md",tags:[],version:"current",frontMatter:{id:"instant",title:"Current Instant Listeners",sidebar_label:"Current Instant Listeners",slug:"instant.html"},sidebar:"extensions",previous:{title:"Decoroutinator",permalink:"/docs/next/extensions/decoroutinator.html"},next:{title:"JUnit XML",permalink:"/docs/next/extensions/junit_xml.html"}},l={},c=[{value:"Current instant listeners",id:"current-instant-listeners",level:3}],p={toc:c};function u(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://central.sonatype.com/artifact/io.kotest/kotest-extensions-now"},(0,a.kt)("img",{src:"https://img.shields.io/maven-central/v/io.kotest/kotest-extensions-now.svg?label=latest%20release"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://central.sonatype.com/repository/maven-snapshots/io/kotest/kotest-extensions-now/maven-metadata.xml"},(0,a.kt)("img",{src:"https://img.shields.io/maven-metadata/v?metadataUrl=https%3A%2F%2Fcentral.sonatype.com%2Frepository%2Fmaven-snapshots%2Fio%2Fkotest%2Fkotest-extensions-now%2Fmaven-metadata.xml"}))),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Since Kotest 5.6.0, Current instant listeners are located in the artifact ",(0,a.kt)("inlineCode",{parentName:"p"},"io.kotest:kotest-extensions-now:${kotest-version}"),"."),(0,a.kt)("p",{parentName:"admonition"},"Add it as a dependency to use any of the functionality mentioned below.")),(0,a.kt)("h3",{id:"current-instant-listeners"},"Current instant listeners"),(0,a.kt)("p",null,"Sometimes you may want to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"now")," static functions located in ",(0,a.kt)("inlineCode",{parentName:"p"},"java.time")," classes for multiple reasons, such as setting the creation date of an entity"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"data class MyEntity(creationDate: LocalDateTime = LocalDateTime.now())"),"."),(0,a.kt)("p",null,"But what to do when you want to test that value? ",(0,a.kt)("inlineCode",{parentName:"p"},"now")," will be different\neach time you call it!"),(0,a.kt)("p",null,"For that, Kotest provides ",(0,a.kt)("inlineCode",{parentName:"p"},"ConstantNowListener")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"withConstantNow")," functions."),(0,a.kt)("p",null,"While executing your code, your ",(0,a.kt)("inlineCode",{parentName:"p"},"now")," will always be the value that you want to test against."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"val foreverNow = LocalDateTime.now()\n\nwithConstantNow(foreverNow) {\n  LocalDateTime.now() shouldBe foreverNow\n  delay(10) // Code is taking a small amount of time to execute, but `now` changed!\n  LocalDateTime.now() shouldBe foreverNow\n}\n\n")),(0,a.kt)("p",null,"Or, with a listener for all the tests:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"  override fun listeners() = listOf(\n    ConstantNowTestListener(foreverNow)\n  )\n")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"withContantNow")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"ConstantNowTestListener")," are very sensitive to race conditions. Using them, mocks the static method ",(0,a.kt)("inlineCode",{parentName:"p"},"now")," which is global to the whole JVM instance,\nif you're using it while running test in parallel, the results may be inconsistent.")))}u.isMDXComponent=!0}}]);