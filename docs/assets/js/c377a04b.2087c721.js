"use strict";(self.webpackChunkkotestdocs=self.webpackChunkkotestdocs||[]).push([[46971],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),h=r,d=m["".concat(i,".").concat(h)]||m[h]||u[h]||o;return n?a.createElement(d,s(s({ref:t},p),{},{components:n})):a.createElement(d,s({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},21269:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={id:"home"},s=void 0,l={unversionedId:"home",id:"home",title:"home",description:"Kotest is a flexible and comprehensive testing project for Kotlin with multiplatform support.",source:"@site/docs/index.md",sourceDirName:".",slug:"/",permalink:"/docs/next/",draft:!1,editUrl:"https://github.com/kotest/kotest/blob/master/documentation/docs/index.md",tags:[],version:"current",frontMatter:{id:"home"}},i={},c=[{value:"Community",id:"community",level:2},{value:"Test with Style",id:"test-with-style",level:2},{value:"Multitude of Matchers",id:"multitude-of-matchers",level:2},{value:"Let the Computer Generate Your Test Data",id:"let-the-computer-generate-your-test-data",level:2},{value:"Check all the Tricky Cases With Data Driven Testing",id:"check-all-the-tricky-cases-with-data-driven-testing",level:2},{value:"Test Exceptions",id:"test-exceptions",level:2},{value:"Fine Tune Test Execution",id:"fine-tune-test-execution",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("img",{src:"/img/logo_with_text.png",alt:"kotest logo",width:"700"}),(0,r.kt)("img",{src:"/img/intro_gif.gif"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kotest is a flexible and comprehensive testing project for Kotlin with multiplatform support.")),(0,r.kt)("p",null,"For latest updates see ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/changelog.html"},"Changelog"),".",(0,r.kt)("br",null),"\nSee our ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/quickstart"},"quick start")," guide to get up and running."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://GitHub.com/kotest/kotest/stargazers/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/stars/kotest/kotest.svg?style=social&label=Star&maxAge=2592000",alt:"GitHub stars"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://search.maven.org/search?q=g:io.kotest"},(0,r.kt)("img",{src:"https://img.shields.io/maven-central/v/io.kotest/kotest-framework-api-jvm.svg?label=latest%20release"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/license/kotest/kotest",alt:"GitHub"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://kotlinlang.slack.com/archives/CT0G9SD7Z"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/static/v1?label=kotlinlang&message=kotest&color=blue&logo=slack",alt:"kotest @ kotlinlang.slack.com"}))),(0,r.kt)("h2",{id:"community"},"Community"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/tagged/kotest"},"Stack Overflow"),' (don\'t forget to use the tag "kotest".)'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://kotlinlang.slack.com/messages/kotest"},"Kotest channel")," in the Kotlin Slack (get an invite ",(0,r.kt)("a",{parentName:"li",href:"https://slack.kotlinlang.org/"},"here"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/kotest/kotest/wiki/contribute"},"Contribute"))),(0,r.kt)("h2",{id:"test-with-style"},"Test with Style"),(0,r.kt)("p",null,"Write simple and beautiful tests with the ",(0,r.kt)("inlineCode",{parentName:"p"},"StringSpec")," style:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'class MyTests : StringSpec({\n  "length should return size of string" {\n    "hello".length shouldBe 5\n  }\n  "startsWith should test for a prefix" {\n    "world" should startWith("wor")\n  }\n})\n')),(0,r.kt)("p",null,"Kotest comes with several ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/framework/testing-styles.html"},"testing styles")," so you can choose one that fits your needs."),(0,r.kt)("h2",{id:"multitude-of-matchers"},"Multitude of Matchers"),(0,r.kt)("p",null,"Use over 300 provided matchers to test assertions on many different types:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'"substring".shouldContain("str")\n\nuser.email.shouldBeLowerCase()\n\nmyImageFile.shouldHaveExtension(".jpg")\n\ncityMap.shouldContainKey("London")\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"withClue")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"asClue")," helpers can add extra context to assertions so failures are self explanatory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'withClue("Name should be present") { user.name shouldNotBe null }\n\ndata class HttpResponse(val status: Int, body: String)\nval response = HttpResponse(200, "the content")\nresponse.asClue {\n    it.status shouldBe 200\n    it.body shouldBe "the content"\n}\n')),(0,r.kt)("p",null,"Nesting is allowed in both cases and will show all available clues."),(0,r.kt)("p",null,"Matchers are extension methods and so your IDE will auto complete. See the ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/assertions/matchers"},"full list of matchers")," or write your own."),(0,r.kt)("h2",{id:"let-the-computer-generate-your-test-data"},"Let the Computer Generate Your Test Data"),(0,r.kt)("p",null,"Use ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/framework/framework.html"},"property based testing")," to test your code with automatically generated test data:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'class PropertyExample: StringSpec({\n  "String size" {\n    checkAll<String, String> { a, b ->\n      (a + b) shouldHaveLength a.length + b.length\n    }\n  }\n})\n')),(0,r.kt)("h2",{id:"check-all-the-tricky-cases-with-data-driven-testing"},"Check all the Tricky Cases With Data Driven Testing"),(0,r.kt)("p",null,"Handle even an enormous amount of input parameter combinations easily with ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/framework/data-driven-testing.html"},"data driven tests"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'class StringSpecExample : StringSpec({\n  "maximum of two numbers" {\n    forAll(\n        row(1, 5, 5),\n        row(1, 0, 1),\n        row(0, 0, 0)\n    ) { a, b, max ->\n      Math.max(a, b) shouldBe max\n    }\n  }\n})\n')),(0,r.kt)("h2",{id:"test-exceptions"},"Test Exceptions"),(0,r.kt)("p",null,"Testing for ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/assertions/assertions.html#exceptions"},"exceptions")," is easy with Kotest:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val exception = shouldThrow<IllegalAccessException> {\n  // code in here that you expect to throw an IllegalAccessException\n}\nexception.message should startWith("Something went wrong")\n')),(0,r.kt)("h2",{id:"fine-tune-test-execution"},"Fine Tune Test Execution"),(0,r.kt)("p",null,"You can specify the number of invocations, parallelism, and a timeout for each test or for all tests.\nAnd you can group tests by tags or disable them conditionally.\nAll you need is ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/framework/project-config.html"},(0,r.kt)("inlineCode",{parentName:"a"},"config")),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'class MySpec : StringSpec({\n  "should use config".config(timeout = 2.seconds, invocations = 10, threads = 2, tags = setOf(Database, Linux)) {\n    // test here\n  }\n})\n')))}u.isMDXComponent=!0}}]);