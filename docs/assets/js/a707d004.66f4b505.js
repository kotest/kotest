"use strict";(self.webpackChunkkotestdocs=self.webpackChunkkotestdocs||[]).push([[30314],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(r),d=a,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||i;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},91439:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const i={id:"reflective_arbs",title:"Reflective Arbs",slug:"reflective-arbs.html"},o=void 0,l={unversionedId:"proptest/reflective_arbs",id:"version-5.3.x/proptest/reflective_arbs",title:"Reflective Arbs",description:"When running tests on JVM, Kotest supports generating more complex Arbs automatically. This can be useful when you",source:"@site/versioned_docs/version-5.3.x/proptest/reflective_arbs.md",sourceDirName:"proptest",slug:"/proptest/reflective-arbs.html",permalink:"/docs/5.3.x/proptest/reflective-arbs.html",draft:!1,editUrl:"https://github.com/kotest/kotest/blob/master/documentation/versioned_docs/version-5.3.x/proptest/reflective_arbs.md",tags:[],version:"5.3.x",frontMatter:{id:"reflective_arbs",title:"Reflective Arbs",slug:"reflective-arbs.html"},sidebar:"proptest",previous:{title:"Extra Arbs",permalink:"/docs/5.3.x/proptest/property-test-extra-arbs.html"}},c={},s=[],p={toc:s};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"When running tests on ",(0,a.kt)("strong",{parentName:"p"},"JVM"),", Kotest supports generating more complex ",(0,a.kt)("inlineCode",{parentName:"p"},"Arb"),"s automatically. This can be useful when you\nhave a ",(0,a.kt)("inlineCode",{parentName:"p"},"data class")," which carries a simple combination of data which can already be automatically derived."),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'enum class Currency {\n  USD, GBP, EUR\n}\n\ndata class CurrencyAmount(\n  val amount: Long,\n  val currency: Currency\n)\n\ncontext("All currencies converts to EUR") { // In some spec\n  checkAll(Arb.bind<CurrencyAmount>()) { currencyAmount ->\n    val converted = currencyAmount.convertTo(EUR)\n    converted.currency shouldBe EUR\n  }\n}\n')),(0,a.kt)("p",null,"Reflective binding is supported for:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Data classes, where all properties also fall into this category"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Pair"),", where 1st and 2nd fall into this category"),(0,a.kt)("li",{parentName:"ul"},"Primitives"),(0,a.kt)("li",{parentName:"ul"},"Enums"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"LocalDate"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"LocalDateTime"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"LocalTime"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Period"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Instant")," from ",(0,a.kt)("inlineCode",{parentName:"li"},"java.time")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"BigDecimal"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"BigInteger")),(0,a.kt)("li",{parentName:"ul"},"Collections (",(0,a.kt)("inlineCode",{parentName:"li"},"Set"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"List"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Map"),")"),(0,a.kt)("li",{parentName:"ul"},"Other types for which you have provided an Arb explicitly using the ",(0,a.kt)("inlineCode",{parentName:"li"},"providedArbs")," parameter")))}u.isMDXComponent=!0}}]);