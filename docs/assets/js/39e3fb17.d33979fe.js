"use strict";(self.webpackChunkkotestdocs=self.webpackChunkkotestdocs||[]).push([[71930],{3905:(t,e,n)=>{n.d(e,{Zo:()=>o,kt:()=>u});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function d(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var m=a.createContext({}),p=function(t){var e=a.useContext(m),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},o=function(t){var e=p(t.components);return a.createElement(m.Provider,{value:e},t.children)},N={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,m=t.parentName,o=d(t,["components","mdxType","originalType","parentName"]),k=p(n),u=r,g=k["".concat(m,".").concat(u)]||k[u]||N[u]||l;return n?a.createElement(g,i(i({ref:e},o),{},{components:n})):a.createElement(g,i({ref:e},o))}));function u(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=k;var d={};for(var m in e)hasOwnProperty.call(e,m)&&(d[m]=e[m]);d.originalType=t,d.mdxType="string"==typeof t?t:r,i[1]=d;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},85510:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>m,contentTitle:()=>i,default:()=>N,frontMatter:()=>l,metadata:()=>d,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={id:"genslist",title:"Generators List",slug:"property-test-generators-list.html",sidebar_label:"Generators List"},i=void 0,d={unversionedId:"proptest/genslist",id:"proptest/genslist",title:"Generators List",description:"This page lists all current generators in Kotest. There are two types of generator: arbitrary",source:"@site/docs/proptest/genslist.md",sourceDirName:"proptest",slug:"/proptest/property-test-generators-list.html",permalink:"/docs/next/proptest/property-test-generators-list.html",draft:!1,editUrl:"https://github.com/kotest/kotest/blob/master/documentation/docs/proptest/genslist.md",tags:[],version:"current",frontMatter:{id:"genslist",title:"Generators List",slug:"property-test-generators-list.html",sidebar_label:"Generators List"},sidebar:"proptest",previous:{title:"Generators",permalink:"/docs/next/proptest/property-test-generators.html"},next:{title:"Generator Operations",permalink:"/docs/next/proptest/generator-operations.html"}},m={},p=[],o={toc:p};function N(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This page lists all current generators in Kotest. There are two types of generator: ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/proptest/property-test-generators.html#arbitrary"},"arbitrary"),"\nand ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/proptest/property-test-generators.html#exhaustive"},"exhaustive"),"."),(0,r.kt)("p",null,"Most generators are available on all platforms. Some are JVM or JS specific."),(0,r.kt)("p",null,"We also provide generators for ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/proptest/property-test-generators-arrow.html"},"Arrow")," as a separate module."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Generator"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"JVM"),(0,r.kt)("th",{parentName:"tr",align:null},"JS"),(0,r.kt)("th",{parentName:"tr",align:null},"Native"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Nulls")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"arb.orNull()")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random values from the arb instance, with null values mixed in. For example, ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb.int().orNull()")," could generate ",(0,r.kt)("inlineCode",{parentName:"td"},"1, -1, null, 8, 17"),", and so on. Has overloaded versions to control the frequency of nulls being generated."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"arb.orNull(nullProbability)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random values from the arb instance, with null values mixed in using the defined probability."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Booleans")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.boolean()")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"Boolean"),"s."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.booleanArray(length, content)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"BoolArray"),"s where ",(0,r.kt)("inlineCode",{parentName:"td"},"length")," produces the length of the arrays and ",(0,r.kt)("inlineCode",{parentName:"td"},"content")," produces the content of the arrays."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Exhaustive.boolean()")),(0,r.kt)("td",{parentName:"tr",align:null},"Alternatives between true and false."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Chars")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.char(range1, range2,...)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns random char's generated from one or more given ranges. By supporting multiple ranges, it is possible to specific non-consecutive ranges of characters to populate values from."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.char(List<CharRange>)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns chars distributed across the lists of chars. For example, ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb.char(listOf('A'..'C', 'X'..'Z'))")," will generate values of A, B, C, X, Y, Z with equal probability."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.charArray(length, content)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"CharArray"),"s where ",(0,r.kt)("inlineCode",{parentName:"td"},"length")," produces the length of the arrays and ",(0,r.kt)("inlineCode",{parentName:"td"},"content")," produces the content of the arrays."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Constants")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.constant(t)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that always returns ",(0,r.kt)("inlineCode",{parentName:"td"},"t")),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Bytes")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.byte(min, max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"Byte"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min"),", -1, 0, 1 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.positiveByte(max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces positive ",(0,r.kt)("inlineCode",{parentName:"td"},"Byte"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are 1 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.negativeByte(min)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces negative ",(0,r.kt)("inlineCode",{parentName:"td"},"Byte"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," and -1 which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.byteArray(length, content)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"ByteArray"),"s where ",(0,r.kt)("inlineCode",{parentName:"td"},"length")," produces the length of the arrays and ",(0,r.kt)("inlineCode",{parentName:"td"},"content")," produces the content of the arrays."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.uByte(min, max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"UByte"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min"),", 1 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.uByteArray(length, content)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"UByteArray"),"s where ",(0,r.kt)("inlineCode",{parentName:"td"},"length")," produces the length of the arrays and ",(0,r.kt)("inlineCode",{parentName:"td"},"content")," produces the content of the arrays."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Shorts")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.short(min, max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"Short"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min"),", -1, 0, 1 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.positiveShort(max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces positive ",(0,r.kt)("inlineCode",{parentName:"td"},"Short"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are 1 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.negativeShort(min)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces negative ",(0,r.kt)("inlineCode",{parentName:"td"},"Short"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," and -1 which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.shortArray(length, content)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"ShortArray"),"s where ",(0,r.kt)("inlineCode",{parentName:"td"},"length")," produces the length of the arrays and ",(0,r.kt)("inlineCode",{parentName:"td"},"content")," produces the content of the arrays."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.uShort(min, max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"UShort"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min"),", 1 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.uShortArray(length, content)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"UShortArray"),"s where ",(0,r.kt)("inlineCode",{parentName:"td"},"length")," produces the length of the arrays and ",(0,r.kt)("inlineCode",{parentName:"td"},"content")," produces the content of the arrays."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Ints")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.int(min, max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"Int"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min"),", -1, 0, 1 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.positiveInt(max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces positive ",(0,r.kt)("inlineCode",{parentName:"td"},"Int"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are 1 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.nonNegativeInt(max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces non negative ",(0,r.kt)("inlineCode",{parentName:"td"},"Int"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are 0, 1 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.negativeInt(min)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces negative ",(0,r.kt)("inlineCode",{parentName:"td"},"Int"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," and -1 which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.nonPositiveInt(min)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces non positive ",(0,r.kt)("inlineCode",{parentName:"td"},"Int"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min"),", -1 and 0 which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.intArray(length, content)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"IntArray"),"s where ",(0,r.kt)("inlineCode",{parentName:"td"},"length")," produces the length of the arrays and ",(0,r.kt)("inlineCode",{parentName:"td"},"content")," produces the content of the arrays."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.uInt(min, max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"UInt"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min"),", 1 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.uIntArray(length, content)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"UIntArray"),"s where ",(0,r.kt)("inlineCode",{parentName:"td"},"length")," produces the length of the arrays and ",(0,r.kt)("inlineCode",{parentName:"td"},"content")," produces the content of the arrays."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Exhaustive.ints(range)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns all ints in the given range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.multiple(k, max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates multiples of k up a max value. The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),"."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.factor(k)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates factors of k."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Longs")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.long(min, max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"Long"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min"),", -1, 0, 1 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.positiveLong(max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces positive ",(0,r.kt)("inlineCode",{parentName:"td"},"Long"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are 1 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.negativeLong(min)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces negative ",(0,r.kt)("inlineCode",{parentName:"td"},"Long"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," and -1 which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.longArray(length, content)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"LongArray"),"s where ",(0,r.kt)("inlineCode",{parentName:"td"},"length")," produces the length of the arrays and ",(0,r.kt)("inlineCode",{parentName:"td"},"content")," produces the content of the arrays."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.uLong(min, max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"ULong"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min"),", 1 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.uLongArray(length, content)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"ULongArray"),"s where ",(0,r.kt)("inlineCode",{parentName:"td"},"length")," produces the length of the arrays and ",(0,r.kt)("inlineCode",{parentName:"td"},"content")," produces the content of the arrays."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Exhaustive.longs(range)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns all longs in the given range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Floats")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.float(min, max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"Float"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"Float.NEGATIVE_INFINITY"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"min"),", -1.0, -",(0,r.kt)("inlineCode",{parentName:"td"},"Float.MIN_VALUE"),", -0.0, 0.0, ",(0,r.kt)("inlineCode",{parentName:"td"},"Float.MIN_VALUE"),", 1.0, ",(0,r.kt)("inlineCode",{parentName:"td"},"max"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"Float.POSITIVE_INFINITY")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"Float.NaN")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.positiveFloat(includeNonFiniteEdgeCases)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces positive ",(0,r.kt)("inlineCode",{parentName:"td"},"Float"),"s. The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"Float.MIN_VALUE"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"Float.MAX_VALUE"),", 1.0, and if includeNonFiniteEdgeCases is true also ",(0,r.kt)("inlineCode",{parentName:"td"},"Float.POSITIVE_INFINITY"),", which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.negativeFloat(includeNonFiniteEdgeCases)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces negative ",(0,r.kt)("inlineCode",{parentName:"td"},"Float"),"s. The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"Float.NEGATIVE_INFINITY"),"if includeNonFiniteEdgeCases is true, ",(0,r.kt)("inlineCode",{parentName:"td"},"-Float.MAX_VALUE"),", -1.0 and -",(0,r.kt)("inlineCode",{parentName:"td"},"Float.MIN_VALUE")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.numericFloat(min, max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces numeric ",(0,r.kt)("inlineCode",{parentName:"td"},"Float"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min"),", -1.0, -",(0,r.kt)("inlineCode",{parentName:"td"},"Float.MIN_VALUE"),", -0.0, 0.0, ",(0,r.kt)("inlineCode",{parentName:"td"},"Float.MIN_VALUE"),", 1.0 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.floatArray(length, content)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"FloatArray"),"s where ",(0,r.kt)("inlineCode",{parentName:"td"},"length")," produces the length of the arrays and ",(0,r.kt)("inlineCode",{parentName:"td"},"content")," produces the content of the arrays."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Doubles")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.double(min, max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"Double"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"Double.NEGATIVE_INFINITY"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"min"),", -1.0, -",(0,r.kt)("inlineCode",{parentName:"td"},"Double.MIN_VALUE"),", -0.0, 0.0, ",(0,r.kt)("inlineCode",{parentName:"td"},"Double.MIN_VALUE"),", 1.0, ",(0,r.kt)("inlineCode",{parentName:"td"},"max"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"Double.POSITIVE_INFINITY")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"Double.NaN")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.positiveDouble(max, includeNonFiniteEdgeCases)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces positive ",(0,r.kt)("inlineCode",{parentName:"td"},"Double"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"Double.MIN_VALUE")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"Double.MIN_VALUE"),", 1.0, ",(0,r.kt)("inlineCode",{parentName:"td"},"max"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"Double.POSITIVE_INFINITY")," (when includeNonFiniteEdgeCases is true) which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.negativeDouble(min, includeNonFiniteEdgeCases)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces negative ",(0,r.kt)("inlineCode",{parentName:"td"},"Double"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"-Double.MIN_VALUE")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"Double.NEGATIVE_INFINITY"),"(when includeNonFiniteEdgeCases is true), ",(0,r.kt)("inlineCode",{parentName:"td"},"min"),", -1.0 and -",(0,r.kt)("inlineCode",{parentName:"td"},"Double.MIN_VALUE")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.numericDouble(min, max)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces numeric ",(0,r.kt)("inlineCode",{parentName:"td"},"Double"),"s from ",(0,r.kt)("inlineCode",{parentName:"td"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," (inclusive). The edge cases are ",(0,r.kt)("inlineCode",{parentName:"td"},"min"),", -1.0, -",(0,r.kt)("inlineCode",{parentName:"td"},"Double.MIN_VALUE"),", -0.0, 0.0, ",(0,r.kt)("inlineCode",{parentName:"td"},"Double.MIN_VALUE"),", 1.0 and ",(0,r.kt)("inlineCode",{parentName:"td"},"max")," which are only included if they are in the provided range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.doubleArray(length, content)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns an ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb")," that produces ",(0,r.kt)("inlineCode",{parentName:"td"},"DoubleArray"),"s where ",(0,r.kt)("inlineCode",{parentName:"td"},"length")," produces the length of the arrays and ",(0,r.kt)("inlineCode",{parentName:"td"},"content")," produces the content of the arrays."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Enums")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.enum<T>()")),(0,r.kt)("td",{parentName:"tr",align:null},"Randomly selects constants from the given enum."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Exhaustive.enum<T>()")),(0,r.kt)("td",{parentName:"tr",align:null},"Iterates all the constants defined in the given enum."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Regional")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.locale()")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates locales in the Java format, eg ",(0,r.kt)("inlineCode",{parentName:"td"},"en_US")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"ca_ES_VALENCIA"),"."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.timezoneCodeThree()")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates timezones in the format ABC, for example BST or EST. Does not include all possible timezones, and is only used for sampling data."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.geoLocation()")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates ",(0,r.kt)("inlineCode",{parentName:"td"},"GeoLocation")," objects with random latitude/longitude points uniformly distributed on the globe."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Strings")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.string(range)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random printable strings with a randomly chosen size from the given range. If range is not specified then (0..100) is used. The edge cases include empty string, a blank string and a unicode string."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.string(range, acceptableCharacters)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random strings containing only provided characters with a randomly chosen size from the given range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.stringPattern(pattern)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates strings that match given pattern using ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/curious-odd-man/RgxGen"},"RgxGen")),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Exhaustive.azstring(range)")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns all A-Z strings in the given range. For example if range was 1..2 then a, b, c, ...., yz, zz would be included."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.email(localPartGen, domainGen)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random emails where the local part and domain part are random strings generated by the given generators. A default value is provided for both."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.emailLocalPart()")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random local email parts"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.uuid(type)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random UUIDs of the given type"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.domain(tlds, labelArb)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random domains with a random tld (defaults to any of the top 120 TLDs) and a label generator, which generates domain parts."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Builders")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.bind(arbA, arbB, fn)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates values by pulling a value from each of the two given arbs and then passing those values to the supplied function."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.bind(arbA, arbB, arbC, fn)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates values by pulling a value from each of the three given arbs and then passing those values to the supplied function."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.bind(arbA, ...., fn)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates values by pulling a value from each of the given arbs and then passing those values to the supplied function."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Combinatorics")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.choice(arbs)")),(0,r.kt)("td",{parentName:"tr",align:null},"Randomly selects one of the given arbs and then uses that to generate the next element."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.choose(pairs)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates values based on weights. For example, ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb.choose(1 to 'A', 2 to 'B')")," will generate 'A' 33% of the time and 'B' 66% of the time."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.frequency(list)")),(0,r.kt)("td",{parentName:"tr",align:null},"Alias to choose"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.shuffle(list)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random permutations of a list. For example, ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb.shuffle(listOf(1,2,3))")," could generate ",(0,r.kt)("inlineCode",{parentName:"td"},"listOf(3,1,2)"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"listOf(1,3,2)")," and so on."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.subsequence(list)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates a random subsequence of the given list starting at index 0 and including the empty list. For example, ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb.subsequence(listOf(1,2,3))")," could generate ",(0,r.kt)("inlineCode",{parentName:"td"},"listOf(1)"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"listOf(1,2)"),", and so on."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"`Arb.slice(list)"),(0,r.kt)("td",{parentName:"tr",align:null},"Generates a random slice of the given list. For example, ",(0,r.kt)("inlineCode",{parentName:"td"},"Arb.slice(listOf(1,2,3))")," could generate ",(0,r.kt)("inlineCode",{parentName:"td"},"listOf(1)"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"listOf(2)"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"listOf(3)"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"listOf(1,2)"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"listOf(2,3)")," and so on."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Collections")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.element(collection)")),(0,r.kt)("td",{parentName:"tr",align:null},"Randomly selects one of the elements of the given collection."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.element(vararg T)")),(0,r.kt)("td",{parentName:"tr",align:null},"Randomly selects one of the elements from the varargs."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.list(gen, range)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates lists where values are generated by the given element generator. The size of each list is determined randomly by the specified range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.set(gen, range)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates sets where values are generated by the given element generator. The size of each set is determined randomly by the specified range. The slippage argument specifies how many attempts will be made to generate each element before erroring, in the case that the underlying arb does not have enough unique values to satisfy the set size."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.set(gen, range, slippage)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates sets where values are generated by the given element generator. The size of each set is determined randomly by the specified range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb<T>.chunked(range)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates lists where each list is populated from elements of this receiver. The size of each size is randomly chosen within the given range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb<T>.chunked(minSize, maxSize)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates lists where each list is populated from elements of this receiver. The size of each size is randomly chosen within the given range parameters."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Exhaustive.collection(list)")),(0,r.kt)("td",{parentName:"tr",align:null},"Enumerates each element of the list one by one."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Exhaustive.powerSet(list)")),(0,r.kt)("td",{parentName:"tr",align:null},"Enumerates each all the possible subsets of the list, one subset at a time."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Exhaustive.permutations(list, length)")),(0,r.kt)("td",{parentName:"tr",align:null},"Enumerates all possible lists of size=length containing elements of the list."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Exhaustive.slices(list)")),(0,r.kt)("td",{parentName:"tr",align:null},"Enumerates all possible slices of the list."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Maps")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.map(Arb<Pair<K,V>>, minSize, maxSize)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random maps, each one with a size between minSize and maxSize, and each element generated from the given Pair arb."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.map(Arb<K>, Arb<V>, minSize, maxSize)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random maps, each one with a size between minSize and maxSize, and each key generated from the given key arb and each value generated from the given value arb."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Tuples")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.pair(arb1, arb2)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates ",(0,r.kt)("inlineCode",{parentName:"td"},"Pair")," instances where each value of the pair is drawn from the two provided arbs"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.triple(arb1, arb2, arb3)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates ",(0,r.kt)("inlineCode",{parentName:"td"},"Triple")," instances where each value of the triple is drawn from the three provided arbs"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Dates")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.date(ranges)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random dates with the year between the given range"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.datetime(ranges)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random date times with the year between the given range"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.localDateTime(ranges)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random LocalDateTime's with the year between the given range"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.localTime(startTime, endTime)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random LocalTime's between provided times, spanning over the midnight if startTime is later than endTime"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.localDateTime(minLocalDateTime, maxLocalDateTime)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random LocalDateTime's in the given range between ",(0,r.kt)("inlineCode",{parentName:"td"},"minLocalDateTime")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"maxLocalDateTime")),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.localDate(minDate, maxDate)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random LocalDate's between minDate and maxDate inclusive"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Durations")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.duration(ranges)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random durations in the given range."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Kotlinx DateTime")),(0,r.kt)("td",{parentName:"tr",align:null},"Requires ",(0,r.kt)("inlineCode",{parentName:"td"},"io.kotest.extensions:kotest-property-datetime")," module"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.date(yearRange)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates ",(0,r.kt)("inlineCode",{parentName:"td"},"LocalDate"),"s with the year between the given range and other fields randomly."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.datetime(yearRange, hourRange, minuteRange, secondRage)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates ",(0,r.kt)("inlineCode",{parentName:"td"},"LocalDateTime"),"s with all fields in the given ranges"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.instant(range)")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates ",(0,r.kt)("inlineCode",{parentName:"td"},"Instant"),"s with the epoch randomly generated in the given range"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Networking")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Arb.ipAddressV4()")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates random IP addresses in the format a.b.c.d, where each part is between 0 and 255."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")))))}N.isMDXComponent=!0}}]);